{"ast":null,"code":"var _jsxFileName = \"E:\\\\Y2S2\\\\Project\\\\frontend\\\\src\\\\Context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Set up axios interceptor for authentication\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      const storedUser = localStorage.getItem('user');\n      if (storedToken && storedUser) {\n        try {\n          // Verify token with backend\n          const response = await axios.get('http://localhost:5000/auth/profile');\n          setUser(response.data.user);\n          setToken(storedToken);\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setUser(null);\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/login', {\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setToken(newToken);\n      setUser(userData);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/register', userData);\n      const {\n        token: newToken,\n        user: newUser\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setToken(newToken);\n      setUser(newUser);\n      return {\n        success: true,\n        user: newUser\n      };\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setToken(null);\n    setUser(null);\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n  const isAuthenticated = () => {\n    return !!token && !!user;\n  };\n  const hasRole = role => {\n    return user && user.role === role;\n  };\n  const isBranchManager = () => {\n    return hasRole('Branch Manager');\n  };\n  const isFactoryManager = () => {\n    return hasRole('Factory Manager');\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated,\n    hasRole,\n    isBranchManager,\n    isFactoryManager\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"V8bE6DZSV5/nB2UMC4Uofie15PA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","checkAuth","storedToken","storedUser","response","get","data","error","removeItem","login","email","password","post","newToken","userData","setItem","JSON","stringify","success","register","newUser","logout","updateUser","updatedUser","isAuthenticated","hasRole","role","isBranchManager","isFactoryManager","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Y2S2/Project/frontend/src/Context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n    // Set up axios interceptor for authentication\r\n    useEffect(() => {\r\n        if (token) {\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        } else {\r\n            delete axios.defaults.headers.common['Authorization'];\r\n        }\r\n    }, [token]);\r\n\r\n    // Check if user is authenticated on app load\r\n    useEffect(() => {\r\n        const checkAuth = async () => {\r\n            const storedToken = localStorage.getItem('token');\r\n            const storedUser = localStorage.getItem('user');\r\n\r\n            if (storedToken && storedUser) {\r\n                try {\r\n                    // Verify token with backend\r\n                    const response = await axios.get('http://localhost:5000/auth/profile');\r\n                    setUser(response.data.user);\r\n                    setToken(storedToken);\r\n                } catch (error) {\r\n                    // Token is invalid, clear storage\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('user');\r\n                    setUser(null);\r\n                    setToken(null);\r\n                }\r\n            }\r\n            setLoading(false);\r\n        };\r\n\r\n        checkAuth();\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/auth/login', {\r\n                email,\r\n                password\r\n            });\r\n\r\n            const { token: newToken, user: userData } = response.data;\r\n            \r\n            localStorage.setItem('token', newToken);\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n            \r\n            setToken(newToken);\r\n            setUser(userData);\r\n            \r\n            return { success: true, user: userData };\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/auth/register', userData);\r\n            \r\n            const { token: newToken, user: newUser } = response.data;\r\n            \r\n            localStorage.setItem('token', newToken);\r\n            localStorage.setItem('user', JSON.stringify(newUser));\r\n            \r\n            setToken(newToken);\r\n            setUser(newUser);\r\n            \r\n            return { success: true, user: newUser };\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        setToken(null);\r\n        setUser(null);\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    };\r\n\r\n    const updateUser = (updatedUser) => {\r\n        setUser(updatedUser);\r\n        localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    };\r\n\r\n    const isAuthenticated = () => {\r\n        return !!token && !!user;\r\n    };\r\n\r\n    const hasRole = (role) => {\r\n        return user && user.role === role;\r\n    };\r\n\r\n    const isBranchManager = () => {\r\n        return hasRole('Branch Manager');\r\n    };\r\n\r\n    const isFactoryManager = () => {\r\n        return hasRole('Factory Manager');\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        token,\r\n        loading,\r\n        login,\r\n        register,\r\n        logout,\r\n        updateUser,\r\n        isAuthenticated,\r\n        hasRole,\r\n        isBranchManager,\r\n        isFactoryManager\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}