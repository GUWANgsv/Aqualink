{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();// Cart reducer\nconst cartReducer=(state,action)=>{switch(action.type){case'ADD_ITEM':const existingItem=state.items.find(item=>item.id===action.payload.id);if(existingItem){return{...state,items:state.items.map(item=>item.id===action.payload.id?{...item,quantity:item.quantity+action.payload.quantity}:item)};}else{return{...state,items:[...state.items,{...action.payload,quantity:action.payload.quantity}]};}case'REMOVE_ITEM':return{...state,items:state.items.filter(item=>item.id!==action.payload)};case'UPDATE_QUANTITY':return{...state,items:state.items.map(item=>item.id===action.payload.id?{...item,quantity:action.payload.quantity}:item)};case'CLEAR_CART':return{...state,items:[]};default:return state;}};// Cart provider component\nexport const CartProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(cartReducer,{items:[]});// Load cart from localStorage on mount\nuseEffect(()=>{const savedCart=localStorage.getItem('cart');if(savedCart){const parsedCart=JSON.parse(savedCart);parsedCart.items.forEach(item=>{dispatch({type:'ADD_ITEM',payload:item});});}},[]);// Save cart to localStorage whenever it changes\nuseEffect(()=>{localStorage.setItem('cart',JSON.stringify(state));},[state]);// Calculate total items in cart\nconst getTotalItems=()=>{return state.items.reduce((total,item)=>total+item.quantity,0);};// Calculate total price\nconst getTotalPrice=()=>{return state.items.reduce((total,item)=>total+item.price*item.quantity,0);};// Add item to cart\nconst addToCart=function(product){let quantity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;dispatch({type:'ADD_ITEM',payload:{id:product.id,name:product.name,price:product.price,image:product.image,category:product.category,quantity:quantity}});};// Remove item from cart\nconst removeFromCart=productId=>{dispatch({type:'REMOVE_ITEM',payload:productId});};// Update item quantity\nconst updateQuantity=(productId,quantity)=>{if(quantity<=0){removeFromCart(productId);}else{dispatch({type:'UPDATE_QUANTITY',payload:{id:productId,quantity}});}};// Clear cart\nconst clearCart=()=>{dispatch({type:'CLEAR_CART'});};// Checkout function - process all cart items\nconst checkout=async function(){let customerInfo=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(state.items.length===0){throw new Error('Cart is empty');}try{// Prepare purchase data\nconst purchaseData={customerId:customerInfo.customerId||'customer-'+Date.now(),customerName:customerInfo.customerName||'Customer',customerEmail:customerInfo.customerEmail||'customer@example.com',customerPhone:customerInfo.customerPhone||'+94 77 123 4567',items:state.items.map(item=>({itemName:item.name,quantity:item.quantity,unitPrice:item.price})),paymentMethod:customerInfo.paymentMethod||'Cash',deliveryAddress:customerInfo.deliveryAddress||{street:'Customer Address',city:'Colombo',postalCode:'00100',country:'Sri Lanka'},notes:`Cart checkout - ${state.items.length} items`};// Make API call to process purchase\nconst response=await axios.post('http://localhost:5000/CustomerPurchases',purchaseData);if(response.data.success){// Clear cart after successful purchase\nclearCart();return response.data;}else{throw new Error(response.data.message||'Purchase failed');}}catch(error){console.error('Checkout failed:',error);throw error;}};const value={items:state.items,totalItems:getTotalItems(),totalPrice:getTotalPrice(),addToCart,removeFromCart,updateQuantity,clearCart,checkout};return/*#__PURE__*/_jsx(CartContext.Provider,{value:value,children:children});};// Custom hook to use cart context\nexport const useCart=()=>{const context=useContext(CartContext);if(!context){throw new Error('useCart must be used within a CartProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsx","_jsx","CartContext","cartReducer","state","action","type","existingItem","items","find","item","id","payload","map","quantity","filter","CartProvider","_ref","children","dispatch","savedCart","localStorage","getItem","parsedCart","JSON","parse","forEach","setItem","stringify","getTotalItems","reduce","total","getTotalPrice","price","addToCart","product","arguments","length","undefined","name","image","category","removeFromCart","productId","updateQuantity","clearCart","checkout","customerInfo","Error","purchaseData","customerId","Date","now","customerName","customerEmail","customerPhone","itemName","unitPrice","paymentMethod","deliveryAddress","street","city","postalCode","country","notes","response","post","data","success","message","error","console","value","totalItems","totalPrice","Provider","useCart","context"],"sources":["E:/Y2S2/Project/frontend/src/Context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CartContext = createContext();\r\n\r\n// Cart reducer\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      const existingItem = state.items.find(item => item.id === action.payload.id);\r\n      if (existingItem) {\r\n        return {\r\n          ...state,\r\n          items: state.items.map(item =>\r\n            item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity + action.payload.quantity }\r\n              : item\r\n          )\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          items: [...state.items, { ...action.payload, quantity: action.payload.quantity }]\r\n        };\r\n      }\r\n\r\n    case 'REMOVE_ITEM':\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.id !== action.payload)\r\n      };\r\n\r\n    case 'UPDATE_QUANTITY':\r\n      return {\r\n        ...state,\r\n        items: state.items.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, quantity: action.payload.quantity }\r\n            : item\r\n        )\r\n      };\r\n\r\n    case 'CLEAR_CART':\r\n      return {\r\n        ...state,\r\n        items: []\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Cart provider component\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, {\r\n    items: []\r\n  });\r\n\r\n  // Load cart from localStorage on mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      const parsedCart = JSON.parse(savedCart);\r\n      parsedCart.items.forEach(item => {\r\n        dispatch({ type: 'ADD_ITEM', payload: item });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  // Calculate total items in cart\r\n  const getTotalItems = () => {\r\n    return state.items.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  // Calculate total price\r\n  const getTotalPrice = () => {\r\n    return state.items.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n  };\r\n\r\n  // Add item to cart\r\n  const addToCart = (product, quantity = 1) => {\r\n    dispatch({\r\n      type: 'ADD_ITEM',\r\n      payload: {\r\n        id: product.id,\r\n        name: product.name,\r\n        price: product.price,\r\n        image: product.image,\r\n        category: product.category,\r\n        quantity: quantity\r\n      }\r\n    });\r\n  };\r\n\r\n  // Remove item from cart\r\n  const removeFromCart = (productId) => {\r\n    dispatch({\r\n      type: 'REMOVE_ITEM',\r\n      payload: productId\r\n    });\r\n  };\r\n\r\n  // Update item quantity\r\n  const updateQuantity = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n    } else {\r\n      dispatch({\r\n        type: 'UPDATE_QUANTITY',\r\n        payload: { id: productId, quantity }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Clear cart\r\n  const clearCart = () => {\r\n    dispatch({ type: 'CLEAR_CART' });\r\n  };\r\n\r\n  // Checkout function - process all cart items\r\n  const checkout = async (customerInfo = {}) => {\r\n    if (state.items.length === 0) {\r\n      throw new Error('Cart is empty');\r\n    }\r\n\r\n    try {\r\n      // Prepare purchase data\r\n      const purchaseData = {\r\n        customerId: customerInfo.customerId || 'customer-' + Date.now(),\r\n        customerName: customerInfo.customerName || 'Customer',\r\n        customerEmail: customerInfo.customerEmail || 'customer@example.com',\r\n        customerPhone: customerInfo.customerPhone || '+94 77 123 4567',\r\n        items: state.items.map(item => ({\r\n          itemName: item.name,\r\n          quantity: item.quantity,\r\n          unitPrice: item.price\r\n        })),\r\n        paymentMethod: customerInfo.paymentMethod || 'Cash',\r\n        deliveryAddress: customerInfo.deliveryAddress || {\r\n          street: 'Customer Address',\r\n          city: 'Colombo',\r\n          postalCode: '00100',\r\n          country: 'Sri Lanka'\r\n        },\r\n        notes: `Cart checkout - ${state.items.length} items`\r\n      };\r\n\r\n      // Make API call to process purchase\r\n      const response = await axios.post('http://localhost:5000/CustomerPurchases', purchaseData);\r\n      \r\n      if (response.data.success) {\r\n        // Clear cart after successful purchase\r\n        clearCart();\r\n        return response.data;\r\n      } else {\r\n        throw new Error(response.data.message || 'Purchase failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Checkout failed:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    items: state.items,\r\n    totalItems: getTotalItems(),\r\n    totalPrice: getTotalPrice(),\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    checkout\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use cart context\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}