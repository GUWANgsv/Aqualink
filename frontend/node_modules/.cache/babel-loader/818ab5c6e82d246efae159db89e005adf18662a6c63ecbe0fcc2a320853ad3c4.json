{"ast":null,"code":"var _jsxFileName = \"E:\\\\Y2S2\\\\Project\\\\frontend\\\\src\\\\Components\\\\Driver\\\\EmergencyRouteMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix for default markers in react-leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst EmergencyRouteMap = ({\n  emergencyRequest,\n  branchLocation,\n  onClose\n}) => {\n  _s();\n  const [route, setRoute] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [estimatedTime, setEstimatedTime] = useState(null);\n\n  // Default coordinates for Colombo, Sri Lanka\n  const defaultCenter = [6.9271, 79.8612];\n\n  // Parse coordinates from emergency request\n  const emergencyCoords = emergencyRequest !== null && emergencyRequest !== void 0 && emergencyRequest.coordinates ? [emergencyRequest.coordinates.lat, emergencyRequest.coordinates.lng] : defaultCenter;\n\n  // Parse branch coordinates (you might need to adjust this based on your branch data structure)\n  const branchCoords = branchLocation ? [branchLocation.lat || 6.9271, branchLocation.lng || 79.8612] : defaultCenter;\n\n  // Calculate distance between two points using Haversine formula\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\n    const R = 6371; // Earth's radius in km\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLng = (lng2 - lng1) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n\n  // Calculate estimated travel time (assuming average speed of 40 km/h in city traffic)\n  const calculateEstimatedTime = distanceKm => {\n    const averageSpeed = 40; // km/h\n    const timeInHours = distanceKm / averageSpeed;\n    const hours = Math.floor(timeInHours);\n    const minutes = Math.round((timeInHours - hours) * 60);\n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    } else {\n      return `${minutes}m`;\n    }\n  };\n\n  // Calculate road distance along the route\n  const calculateRoadDistance = route => {\n    let totalDistance = 0;\n    for (let i = 0; i < route.length - 1; i++) {\n      const segmentDistance = calculateDistance(route[i][0], route[i][1], route[i + 1][0], route[i + 1][1]);\n      totalDistance += segmentDistance;\n    }\n    return totalDistance;\n  };\n\n  // Calculate route using road-based routing\n  const calculateRoute = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Create realistic road-based route\n      const routeCoordinates = createRealisticRoute(branchCoords, emergencyCoords);\n      setRoute(routeCoordinates);\n\n      // Calculate actual road distance (not straight line)\n      const roadDistance = calculateRoadDistance(routeCoordinates);\n      const calculatedTime = calculateEstimatedTime(roadDistance);\n      setDistance(roadDistance);\n      setEstimatedTime(calculatedTime);\n      console.log(`üìç Road-based route calculated:`);\n      console.log(`üõ£Ô∏è Route waypoints: ${routeCoordinates.length}`);\n      console.log(`üìè Road distance: ${roadDistance.toFixed(2)} km`);\n      console.log(`‚è±Ô∏è Estimated time: ${calculatedTime}`);\n\n      // Compare with straight-line distance\n      const straightLineDistance = calculateDistance(branchCoords[0], branchCoords[1], emergencyCoords[0], emergencyCoords[1]);\n      console.log(`üìè Straight-line distance: ${straightLineDistance.toFixed(2)} km`);\n      console.log(`üìà Road distance is ${((roadDistance / straightLineDistance - 1) * 100).toFixed(1)}% longer than straight line`);\n    } catch (err) {\n      console.error('Error calculating route:', err);\n      setError('Failed to calculate route. Showing direct path.');\n      // Fallback to straight line\n      setRoute([branchCoords, emergencyCoords]);\n      const fallbackDistance = calculateDistance(branchCoords[0], branchCoords[1], emergencyCoords[0], emergencyCoords[1]);\n      setDistance(fallbackDistance);\n      setEstimatedTime(calculateEstimatedTime(fallbackDistance));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Colombo road network for realistic routing\n  const colomboRoads = {\n    // Major roads with their waypoints\n    galleRoad: [[6.9271, 79.8612],\n    // Colombo Fort\n    [6.9200, 79.8500],\n    // Pettah\n    [6.9100, 79.8700],\n    // Bambalapitiya\n    [6.9000, 79.8800],\n    // Wellawatta\n    [6.8900, 79.8900],\n    // Dehiwala\n    [6.8800, 79.9000],\n    // Mount Lavinia\n    [6.8700, 79.8700],\n    // Ratmalana\n    [6.8600, 79.8600],\n    // Moratuwa\n    [6.8500, 79.8500],\n    // Panadura\n    [6.8000, 79.9000],\n    // Kalutara\n    [6.7600, 79.9400],\n    // Wadduwa\n    [6.7200, 79.9800] // Beruwala\n    ],\n    negomboRoad: [[6.9271, 79.8612],\n    // Colombo Fort\n    [6.9500, 79.8800],\n    // Peliyagoda\n    [6.9600, 79.8900],\n    // Wattala\n    [6.9700, 79.9000],\n    // Kandana\n    [6.9800, 79.9100],\n    // Ja-Ela\n    [6.9900, 79.9500],\n    // Katunayake\n    [6.9000, 79.8000],\n    // Ragama\n    [6.9500, 79.8000] // Kelaniya\n    ],\n    parliamentRoad: [[6.9271, 79.8612],\n    // Colombo Fort\n    [6.9200, 79.8400],\n    // Borella\n    [6.9100, 79.9200],\n    // Battaramulla\n    [6.9000, 79.9300],\n    // Kotte\n    [6.8900, 79.9400],\n    // Nugegoda\n    [6.8800, 79.9500],\n    // Maharagama\n    [6.8500, 79.9200] // Kesbewa\n    ],\n    baselineRoad: [[6.9271, 79.8612],\n    // Colombo Fort\n    [6.9200, 79.8400],\n    // Borella\n    [6.9300, 79.8300],\n    // Maradana\n    [6.9400, 79.8200] // Dematagoda\n    ]\n  };\n\n  // Function to find the closest road segment to a point\n  const findClosestRoadSegment = (point, roads) => {\n    let closestRoad = null;\n    let closestDistance = Infinity;\n    let closestIndex = -1;\n    Object.entries(roads).forEach(([roadName, waypoints]) => {\n      waypoints.forEach((waypoint, index) => {\n        const distance = calculateDistance(point[0], point[1], waypoint[0], waypoint[1]);\n        if (distance < closestDistance) {\n          closestDistance = distance;\n          closestRoad = roadName;\n          closestIndex = index;\n        }\n      });\n    });\n    return {\n      road: closestRoad,\n      index: closestIndex,\n      distance: closestDistance\n    };\n  };\n\n  // Function to create realistic road-based route\n  const createRealisticRoute = (start, end) => {\n    const route = [start];\n\n    // Find closest road segments for start and end points\n    const startRoad = findClosestRoadSegment(start, colomboRoads);\n    const endRoad = findClosestRoadSegment(end, colomboRoads);\n    console.log(`üõ£Ô∏è Start point closest to: ${startRoad.road} (${startRoad.distance.toFixed(2)} km)`);\n    console.log(`üõ£Ô∏è End point closest to: ${endRoad.road} (${endRoad.distance.toFixed(2)} km)`);\n\n    // If both points are on the same road, use that road\n    if (startRoad.road === endRoad.road) {\n      const roadWaypoints = colomboRoads[startRoad.road];\n      const startIndex = startRoad.index;\n      const endIndex = endRoad.index;\n\n      // Add waypoints between start and end on the same road\n      if (startIndex < endIndex) {\n        for (let i = startIndex + 1; i <= endIndex; i++) {\n          route.push(roadWaypoints[i]);\n        }\n      } else {\n        for (let i = startIndex - 1; i >= endIndex; i--) {\n          route.push(roadWaypoints[i]);\n        }\n      }\n    } else {\n      // Different roads - find intersection or use major junctions\n      const intersection = findRoadIntersection(startRoad.road, endRoad.road);\n      if (intersection) {\n        // Route through intersection\n        route.push(intersection);\n      } else {\n        // Use Colombo Fort as central junction\n        const centralJunction = [6.9271, 79.8612];\n        route.push(centralJunction);\n      }\n    }\n    route.push(end);\n    return route;\n  };\n\n  // Function to find intersection between two roads\n  const findRoadIntersection = (road1, road2) => {\n    const waypoints1 = colomboRoads[road1];\n    const waypoints2 = colomboRoads[road2];\n\n    // Find common waypoints (intersections)\n    for (let i = 0; i < waypoints1.length; i++) {\n      for (let j = 0; j < waypoints2.length; j++) {\n        const distance = calculateDistance(waypoints1[i][0], waypoints1[i][1], waypoints2[j][0], waypoints2[j][1]);\n        if (distance < 0.5) {\n          // Within 500m, consider as intersection\n          return waypoints1[i];\n        }\n      }\n    }\n    return null; // No intersection found\n  };\n  useEffect(() => {\n    if (emergencyRequest && branchLocation) {\n      calculateRoute();\n    }\n  }, [emergencyRequest, branchLocation]);\n\n  // Calculate center point for map\n  const mapCenter = [(branchCoords[0] + emergencyCoords[0]) / 2, (branchCoords[1] + emergencyCoords[1]) / 2];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative top-20 mx-auto p-5 border w-11/12 max-w-4xl shadow-lg rounded-md bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"Emergency Route Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"text-gray-400 hover:text-gray-600\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-6 h-6\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-blue-900 mb-2\",\n            children: \"Emergency Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Location:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 20\n                }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeLocation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Brigade:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 20\n                }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Water Level:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 20\n                }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.waterLevel]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Priority:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 20\n                }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.priority]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Branch:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 20\n                }, this), \" \", (branchLocation === null || branchLocation === void 0 ? void 0 : branchLocation.name) || 'Colombo Central Branch']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Branch Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 20\n                }, this), \" \", (branchLocation === null || branchLocation === void 0 ? void 0 : branchLocation.address) || '123 Galle Road, Colombo 07']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), distance && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Distance:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 33\n                }, this), \" \", distance.toFixed(2), \" km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 30\n              }, this), estimatedTime && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Est. Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 38\n                }, this), \" \", estimatedTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-gray-600\",\n            children: \"Calculating route...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-yellow-800\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-96 w-full border border-gray-300 rounded-md\",\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            center: mapCenter,\n            zoom: 12,\n            style: {\n              height: '100%',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n              url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: branchCoords,\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-green-700\",\n                    children: \"\\uD83C\\uDFE2 Your Branch\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 44\n                    }, this), \" \", (branchLocation === null || branchLocation === void 0 ? void 0 : branchLocation.name) || 'Colombo Central Branch']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Address:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 44\n                    }, this), \" \", (branchLocation === null || branchLocation === void 0 ? void 0 : branchLocation.address) || '123 Galle Road, Colombo 07']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Coordinates:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 44\n                    }, this), \" \", branchCoords[0].toFixed(6), \", \", branchCoords[1].toFixed(6)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-600 mt-1\",\n                    children: \"\\uD83D\\uDCCD Starting point for emergency delivery\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Marker, {\n              position: emergencyCoords,\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-red-700\",\n                    children: \"\\uD83D\\uDEA8 Emergency Location\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Location:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 44\n                    }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeLocation]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Brigade:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 44\n                    }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Water Level:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 44\n                    }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.waterLevel]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Priority:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 44\n                    }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.priority]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Coordinates:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 44\n                    }, this), \" \", emergencyCoords[0].toFixed(6), \", \", emergencyCoords[1].toFixed(6)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 21\n                  }, this), distance && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Distance:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 57\n                    }, this), \" \", distance.toFixed(2), \" km\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 34\n                  }, this), estimatedTime && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Est. Time:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 62\n                    }, this), \" \", estimatedTime]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-600 mt-1\",\n                    children: \"\\uD83C\\uDFAF Destination for water delivery\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), route && /*#__PURE__*/_jsxDEV(Polyline, {\n              positions: route,\n              color: \"red\",\n              weight: 4,\n              opacity: 0.8,\n              dashArray: \"10, 5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), route && route.length > 2 && route.slice(1, -1).map((waypoint, index) => /*#__PURE__*/_jsxDEV(Marker, {\n              position: waypoint,\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium text-blue-700\",\n                    children: [\"\\uD83D\\uDEE3\\uFE0F Route Waypoint \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: \"Intermediate point on route\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Coordinates:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 46\n                    }, this), \" \", waypoint[0].toFixed(6), \", \", waypoint[1].toFixed(6)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD83D\\uDCCD Red dashed line shows route to emergency location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD83D\\uDEE3\\uFE0F Route includes waypoints for realistic road navigation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD83D\\uDEA8 Follow traffic rules and emergency protocols\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u23F1\\uFE0F Estimated time based on 40 km/h average speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), distance && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDCCF Total distance: \", distance.toFixed(2), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: calculateRoute,\n              disabled: loading,\n              className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\",\n              children: loading ? 'Calculating...' : 'Recalculate Route'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onClose,\n              className: \"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(EmergencyRouteMap, \"XuqGv06c9rWLs624gayeJEn87vQ=\");\n_c = EmergencyRouteMap;\nexport default EmergencyRouteMap;\nvar _c;\n$RefreshReg$(_c, \"EmergencyRouteMap\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","Polyline","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","EmergencyRouteMap","emergencyRequest","branchLocation","onClose","_s","route","setRoute","loading","setLoading","error","setError","distance","setDistance","estimatedTime","setEstimatedTime","defaultCenter","emergencyCoords","coordinates","lat","lng","branchCoords","calculateDistance","lat1","lng1","lat2","lng2","R","dLat","Math","PI","dLng","a","sin","cos","c","atan2","sqrt","calculateEstimatedTime","distanceKm","averageSpeed","timeInHours","hours","floor","minutes","round","calculateRoadDistance","totalDistance","i","length","segmentDistance","calculateRoute","routeCoordinates","createRealisticRoute","roadDistance","calculatedTime","console","log","toFixed","straightLineDistance","err","fallbackDistance","colomboRoads","galleRoad","negomboRoad","parliamentRoad","baselineRoad","findClosestRoadSegment","point","roads","closestRoad","closestDistance","Infinity","closestIndex","Object","entries","forEach","roadName","waypoints","waypoint","index","road","start","end","startRoad","endRoad","roadWaypoints","startIndex","endIndex","push","intersection","findRoadIntersection","centralJunction","road1","road2","waypoints1","waypoints2","j","mapCenter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","brigadeLocation","brigadeName","waterLevel","priority","name","address","center","zoom","style","height","width","attribution","url","position","positions","color","weight","opacity","dashArray","slice","map","disabled","_c","$RefreshReg$"],"sources":["E:/Y2S2/Project/frontend/src/Components/Driver/EmergencyRouteMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Fix for default markers in react-leaflet\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\nconst EmergencyRouteMap = ({ emergencyRequest, branchLocation, onClose }) => {\r\n  const [route, setRoute] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [distance, setDistance] = useState(null);\r\n  const [estimatedTime, setEstimatedTime] = useState(null);\r\n\r\n  // Default coordinates for Colombo, Sri Lanka\r\n  const defaultCenter = [6.9271, 79.8612];\r\n  \r\n  // Parse coordinates from emergency request\r\n  const emergencyCoords = emergencyRequest?.coordinates ? \r\n    [emergencyRequest.coordinates.lat, emergencyRequest.coordinates.lng] : \r\n    defaultCenter;\r\n\r\n  // Parse branch coordinates (you might need to adjust this based on your branch data structure)\r\n  const branchCoords = branchLocation ? \r\n    [branchLocation.lat || 6.9271, branchLocation.lng || 79.8612] : \r\n    defaultCenter;\r\n\r\n  // Calculate distance between two points using Haversine formula\r\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\r\n    const R = 6371; // Earth's radius in km\r\n    const dLat = (lat2 - lat1) * Math.PI / 180;\r\n    const dLng = (lng2 - lng1) * Math.PI / 180;\r\n    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\r\n      Math.sin(dLng/2) * Math.sin(dLng/2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    return R * c;\r\n  };\r\n\r\n  // Calculate estimated travel time (assuming average speed of 40 km/h in city traffic)\r\n  const calculateEstimatedTime = (distanceKm) => {\r\n    const averageSpeed = 40; // km/h\r\n    const timeInHours = distanceKm / averageSpeed;\r\n    const hours = Math.floor(timeInHours);\r\n    const minutes = Math.round((timeInHours - hours) * 60);\r\n    \r\n    if (hours > 0) {\r\n      return `${hours}h ${minutes}m`;\r\n    } else {\r\n      return `${minutes}m`;\r\n    }\r\n  };\r\n\r\n  // Calculate road distance along the route\r\n  const calculateRoadDistance = (route) => {\r\n    let totalDistance = 0;\r\n    for (let i = 0; i < route.length - 1; i++) {\r\n      const segmentDistance = calculateDistance(\r\n        route[i][0], route[i][1],\r\n        route[i + 1][0], route[i + 1][1]\r\n      );\r\n      totalDistance += segmentDistance;\r\n    }\r\n    return totalDistance;\r\n  };\r\n\r\n  // Calculate route using road-based routing\r\n  const calculateRoute = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Create realistic road-based route\r\n      const routeCoordinates = createRealisticRoute(branchCoords, emergencyCoords);\r\n      setRoute(routeCoordinates);\r\n      \r\n      // Calculate actual road distance (not straight line)\r\n      const roadDistance = calculateRoadDistance(routeCoordinates);\r\n      const calculatedTime = calculateEstimatedTime(roadDistance);\r\n      \r\n      setDistance(roadDistance);\r\n      setEstimatedTime(calculatedTime);\r\n      \r\n      console.log(`üìç Road-based route calculated:`);\r\n      console.log(`üõ£Ô∏è Route waypoints: ${routeCoordinates.length}`);\r\n      console.log(`üìè Road distance: ${roadDistance.toFixed(2)} km`);\r\n      console.log(`‚è±Ô∏è Estimated time: ${calculatedTime}`);\r\n      \r\n      // Compare with straight-line distance\r\n      const straightLineDistance = calculateDistance(\r\n        branchCoords[0], branchCoords[1],\r\n        emergencyCoords[0], emergencyCoords[1]\r\n      );\r\n      console.log(`üìè Straight-line distance: ${straightLineDistance.toFixed(2)} km`);\r\n      console.log(`üìà Road distance is ${((roadDistance / straightLineDistance - 1) * 100).toFixed(1)}% longer than straight line`);\r\n      \r\n    } catch (err) {\r\n      console.error('Error calculating route:', err);\r\n      setError('Failed to calculate route. Showing direct path.');\r\n      // Fallback to straight line\r\n      setRoute([branchCoords, emergencyCoords]);\r\n      const fallbackDistance = calculateDistance(\r\n        branchCoords[0], branchCoords[1],\r\n        emergencyCoords[0], emergencyCoords[1]\r\n      );\r\n      setDistance(fallbackDistance);\r\n      setEstimatedTime(calculateEstimatedTime(fallbackDistance));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Colombo road network for realistic routing\r\n  const colomboRoads = {\r\n    // Major roads with their waypoints\r\n    galleRoad: [\r\n      [6.9271, 79.8612], // Colombo Fort\r\n      [6.9200, 79.8500], // Pettah\r\n      [6.9100, 79.8700], // Bambalapitiya\r\n      [6.9000, 79.8800], // Wellawatta\r\n      [6.8900, 79.8900], // Dehiwala\r\n      [6.8800, 79.9000], // Mount Lavinia\r\n      [6.8700, 79.8700], // Ratmalana\r\n      [6.8600, 79.8600], // Moratuwa\r\n      [6.8500, 79.8500], // Panadura\r\n      [6.8000, 79.9000], // Kalutara\r\n      [6.7600, 79.9400], // Wadduwa\r\n      [6.7200, 79.9800]  // Beruwala\r\n    ],\r\n    negomboRoad: [\r\n      [6.9271, 79.8612], // Colombo Fort\r\n      [6.9500, 79.8800], // Peliyagoda\r\n      [6.9600, 79.8900], // Wattala\r\n      [6.9700, 79.9000], // Kandana\r\n      [6.9800, 79.9100], // Ja-Ela\r\n      [6.9900, 79.9500], // Katunayake\r\n      [6.9000, 79.8000], // Ragama\r\n      [6.9500, 79.8000]  // Kelaniya\r\n    ],\r\n    parliamentRoad: [\r\n      [6.9271, 79.8612], // Colombo Fort\r\n      [6.9200, 79.8400], // Borella\r\n      [6.9100, 79.9200], // Battaramulla\r\n      [6.9000, 79.9300], // Kotte\r\n      [6.8900, 79.9400], // Nugegoda\r\n      [6.8800, 79.9500], // Maharagama\r\n      [6.8500, 79.9200]  // Kesbewa\r\n    ],\r\n    baselineRoad: [\r\n      [6.9271, 79.8612], // Colombo Fort\r\n      [6.9200, 79.8400], // Borella\r\n      [6.9300, 79.8300], // Maradana\r\n      [6.9400, 79.8200]  // Dematagoda\r\n    ]\r\n  };\r\n\r\n  // Function to find the closest road segment to a point\r\n  const findClosestRoadSegment = (point, roads) => {\r\n    let closestRoad = null;\r\n    let closestDistance = Infinity;\r\n    let closestIndex = -1;\r\n\r\n    Object.entries(roads).forEach(([roadName, waypoints]) => {\r\n      waypoints.forEach((waypoint, index) => {\r\n        const distance = calculateDistance(point[0], point[1], waypoint[0], waypoint[1]);\r\n        if (distance < closestDistance) {\r\n          closestDistance = distance;\r\n          closestRoad = roadName;\r\n          closestIndex = index;\r\n        }\r\n      });\r\n    });\r\n\r\n    return { road: closestRoad, index: closestIndex, distance: closestDistance };\r\n  };\r\n\r\n  // Function to create realistic road-based route\r\n  const createRealisticRoute = (start, end) => {\r\n    const route = [start];\r\n    \r\n    // Find closest road segments for start and end points\r\n    const startRoad = findClosestRoadSegment(start, colomboRoads);\r\n    const endRoad = findClosestRoadSegment(end, colomboRoads);\r\n    \r\n    console.log(`üõ£Ô∏è Start point closest to: ${startRoad.road} (${startRoad.distance.toFixed(2)} km)`);\r\n    console.log(`üõ£Ô∏è End point closest to: ${endRoad.road} (${endRoad.distance.toFixed(2)} km)`);\r\n    \r\n    // If both points are on the same road, use that road\r\n    if (startRoad.road === endRoad.road) {\r\n      const roadWaypoints = colomboRoads[startRoad.road];\r\n      const startIndex = startRoad.index;\r\n      const endIndex = endRoad.index;\r\n      \r\n      // Add waypoints between start and end on the same road\r\n      if (startIndex < endIndex) {\r\n        for (let i = startIndex + 1; i <= endIndex; i++) {\r\n          route.push(roadWaypoints[i]);\r\n        }\r\n      } else {\r\n        for (let i = startIndex - 1; i >= endIndex; i--) {\r\n          route.push(roadWaypoints[i]);\r\n        }\r\n      }\r\n    } else {\r\n      // Different roads - find intersection or use major junctions\r\n      const intersection = findRoadIntersection(startRoad.road, endRoad.road);\r\n      if (intersection) {\r\n        // Route through intersection\r\n        route.push(intersection);\r\n      } else {\r\n        // Use Colombo Fort as central junction\r\n        const centralJunction = [6.9271, 79.8612];\r\n        route.push(centralJunction);\r\n      }\r\n    }\r\n    \r\n    route.push(end);\r\n    return route;\r\n  };\r\n\r\n  // Function to find intersection between two roads\r\n  const findRoadIntersection = (road1, road2) => {\r\n    const waypoints1 = colomboRoads[road1];\r\n    const waypoints2 = colomboRoads[road2];\r\n    \r\n    // Find common waypoints (intersections)\r\n    for (let i = 0; i < waypoints1.length; i++) {\r\n      for (let j = 0; j < waypoints2.length; j++) {\r\n        const distance = calculateDistance(\r\n          waypoints1[i][0], waypoints1[i][1],\r\n          waypoints2[j][0], waypoints2[j][1]\r\n        );\r\n        if (distance < 0.5) { // Within 500m, consider as intersection\r\n          return waypoints1[i];\r\n        }\r\n      }\r\n    }\r\n    \r\n    return null; // No intersection found\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (emergencyRequest && branchLocation) {\r\n      calculateRoute();\r\n    }\r\n  }, [emergencyRequest, branchLocation]);\r\n\r\n  // Calculate center point for map\r\n  const mapCenter = [\r\n    (branchCoords[0] + emergencyCoords[0]) / 2,\r\n    (branchCoords[1] + emergencyCoords[1]) / 2\r\n  ];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n      <div className=\"relative top-20 mx-auto p-5 border w-11/12 max-w-4xl shadow-lg rounded-md bg-white\">\r\n        <div className=\"mt-3\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-medium text-gray-900\">\r\n              Emergency Route Map\r\n            </h3>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-md\">\r\n            <h4 className=\"font-medium text-blue-900 mb-2\">Emergency Details:</h4>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <p><strong>Location:</strong> {emergencyRequest?.brigadeLocation}</p>\r\n                <p><strong>Brigade:</strong> {emergencyRequest?.brigadeName}</p>\r\n                <p><strong>Water Level:</strong> {emergencyRequest?.waterLevel}</p>\r\n                <p><strong>Priority:</strong> {emergencyRequest?.priority}</p>\r\n              </div>\r\n              <div>\r\n                <p><strong>Branch:</strong> {branchLocation?.name || 'Colombo Central Branch'}</p>\r\n                <p><strong>Branch Address:</strong> {branchLocation?.address || '123 Galle Road, Colombo 07'}</p>\r\n                {distance && <p><strong>Distance:</strong> {distance.toFixed(2)} km</p>}\r\n                {estimatedTime && <p><strong>Est. Time:</strong> {estimatedTime}</p>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {loading && (\r\n            <div className=\"text-center py-4\">\r\n              <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n              <p className=\"mt-2 text-gray-600\">Calculating route...</p>\r\n            </div>\r\n          )}\r\n\r\n          {error && (\r\n            <div className=\"mb-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\r\n              <p className=\"text-yellow-800\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"h-96 w-full border border-gray-300 rounded-md\">\r\n            <MapContainer\r\n              center={mapCenter}\r\n              zoom={12}\r\n              style={{ height: '100%', width: '100%' }}\r\n            >\r\n              <TileLayer\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n              />\r\n              \r\n              {/* Branch Marker */}\r\n              <Marker position={branchCoords}>\r\n                <Popup>\r\n                  <div className=\"p-2\">\r\n                    <h4 className=\"font-medium text-green-700\">üè¢ Your Branch</h4>\r\n                    <p className=\"text-sm\"><strong>Name:</strong> {branchLocation?.name || 'Colombo Central Branch'}</p>\r\n                    <p className=\"text-sm\"><strong>Address:</strong> {branchLocation?.address || '123 Galle Road, Colombo 07'}</p>\r\n                    <p className=\"text-sm\"><strong>Coordinates:</strong> {branchCoords[0].toFixed(6)}, {branchCoords[1].toFixed(6)}</p>\r\n                    <p className=\"text-xs text-gray-600 mt-1\">üìç Starting point for emergency delivery</p>\r\n                  </div>\r\n                </Popup>\r\n              </Marker>\r\n              \r\n              {/* Emergency Location Marker */}\r\n              <Marker position={emergencyCoords}>\r\n                <Popup>\r\n                  <div className=\"p-2\">\r\n                    <h4 className=\"font-medium text-red-700\">üö® Emergency Location</h4>\r\n                    <p className=\"text-sm\"><strong>Location:</strong> {emergencyRequest?.brigadeLocation}</p>\r\n                    <p className=\"text-sm\"><strong>Brigade:</strong> {emergencyRequest?.brigadeName}</p>\r\n                    <p className=\"text-sm\"><strong>Water Level:</strong> {emergencyRequest?.waterLevel}</p>\r\n                    <p className=\"text-sm\"><strong>Priority:</strong> {emergencyRequest?.priority}</p>\r\n                    <p className=\"text-sm\"><strong>Coordinates:</strong> {emergencyCoords[0].toFixed(6)}, {emergencyCoords[1].toFixed(6)}</p>\r\n                    {distance && <p className=\"text-sm\"><strong>Distance:</strong> {distance.toFixed(2)} km</p>}\r\n                    {estimatedTime && <p className=\"text-sm\"><strong>Est. Time:</strong> {estimatedTime}</p>}\r\n                    <p className=\"text-xs text-gray-600 mt-1\">üéØ Destination for water delivery</p>\r\n                  </div>\r\n                </Popup>\r\n              </Marker>\r\n              \r\n              {/* Route Line */}\r\n              {route && (\r\n                <Polyline\r\n                  positions={route}\r\n                  color=\"red\"\r\n                  weight={4}\r\n                  opacity={0.8}\r\n                  dashArray=\"10, 5\"\r\n                />\r\n              )}\r\n              \r\n              {/* Route waypoints */}\r\n              {route && route.length > 2 && route.slice(1, -1).map((waypoint, index) => (\r\n                <Marker key={index} position={waypoint}>\r\n                  <Popup>\r\n                    <div className=\"p-2\">\r\n                      <h4 className=\"font-medium text-blue-700\">üõ£Ô∏è Route Waypoint {index + 1}</h4>\r\n                      <p className=\"text-sm\">Intermediate point on route</p>\r\n                      <p className=\"text-sm\"><strong>Coordinates:</strong> {waypoint[0].toFixed(6)}, {waypoint[1].toFixed(6)}</p>\r\n                    </div>\r\n                  </Popup>\r\n                </Marker>\r\n              ))}\r\n            </MapContainer>\r\n          </div>\r\n\r\n          <div className=\"mt-4 flex justify-between items-center\">\r\n            <div className=\"text-sm text-gray-600\">\r\n              <p>üìç Red dashed line shows route to emergency location</p>\r\n              <p>üõ£Ô∏è Route includes waypoints for realistic road navigation</p>\r\n              <p>üö® Follow traffic rules and emergency protocols</p>\r\n              <p>‚è±Ô∏è Estimated time based on 40 km/h average speed</p>\r\n              {distance && <p>üìè Total distance: {distance.toFixed(2)} km</p>}\r\n            </div>\r\n            <div className=\"flex space-x-3\">\r\n              <button\r\n                onClick={calculateRoute}\r\n                disabled={loading}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\r\n              >\r\n                {loading ? 'Calculating...' : 'Recalculate Route'}\r\n              </button>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmergencyRouteMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}