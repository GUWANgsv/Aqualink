{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(localStorage.getItem('token'));// Set up axios interceptor for authentication\nuseEffect(()=>{if(token){axios.defaults.headers.common['Authorization']=`Bearer ${token}`;}else{delete axios.defaults.headers.common['Authorization'];}},[token]);// Check if user is authenticated on app load\nuseEffect(()=>{const checkAuth=async()=>{const storedToken=localStorage.getItem('token');const storedUser=localStorage.getItem('user');if(storedToken&&storedUser){try{// Verify token with backend\nconst response=await axios.get('http://localhost:5000/auth/profile');setUser(response.data.user);setToken(storedToken);}catch(error){console.error('Token verification failed:',error);// Token is invalid, clear storage\nlocalStorage.removeItem('token');localStorage.removeItem('user');setUser(null);setToken(null);}}setLoading(false);};checkAuth();},[]);const login=async(email,password)=>{try{console.log('Attempting login with:',{email,password});const response=await axios.post('http://localhost:5000/auth/login',{email,password});console.log('Login response:',response.data);const{token:newToken,user:userData}=response.data;localStorage.setItem('token',newToken);localStorage.setItem('user',JSON.stringify(userData));setToken(newToken);setUser(userData);return{success:true,user:userData};}catch(error){console.error('Login error:',error);throw error;}};const register=async userData=>{try{const response=await axios.post('http://localhost:5000/auth/register',userData);const{token:newToken,user:newUser}=response.data;localStorage.setItem('token',newToken);localStorage.setItem('user',JSON.stringify(newUser));setToken(newToken);setUser(newUser);return{success:true,user:newUser};}catch(error){console.error('Registration error:',error);throw error;}};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setToken(null);setUser(null);delete axios.defaults.headers.common['Authorization'];};const updateUser=updatedUser=>{setUser(updatedUser);localStorage.setItem('user',JSON.stringify(updatedUser));};const isAuthenticated=()=>{return!!token&&!!user;};const hasRole=role=>{return user&&user.role===role;};const isBranchManager=()=>{return hasRole('Branch Manager');};const isFactoryManager=()=>{return hasRole('Factory Manager');};const value={user,token,loading,login,register,logout,updateUser,isAuthenticated,hasRole,isBranchManager,isFactoryManager};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","checkAuth","storedToken","storedUser","response","get","data","error","console","removeItem","login","email","password","log","post","newToken","userData","setItem","JSON","stringify","success","register","newUser","logout","updateUser","updatedUser","isAuthenticated","hasRole","role","isBranchManager","isFactoryManager","value","Provider"],"sources":["E:/Y2S2/Project/frontend/src/Context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n    // Set up axios interceptor for authentication\r\n    useEffect(() => {\r\n        if (token) {\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        } else {\r\n            delete axios.defaults.headers.common['Authorization'];\r\n        }\r\n    }, [token]);\r\n\r\n    // Check if user is authenticated on app load\r\n    useEffect(() => {\r\n        const checkAuth = async () => {\r\n            const storedToken = localStorage.getItem('token');\r\n            const storedUser = localStorage.getItem('user');\r\n\r\n            if (storedToken && storedUser) {\r\n                try {\r\n                    // Verify token with backend\r\n                    const response = await axios.get('http://localhost:5000/auth/profile');\r\n                    setUser(response.data.user);\r\n                    setToken(storedToken);\r\n                } catch (error) {\r\n                    console.error('Token verification failed:', error);\r\n                    // Token is invalid, clear storage\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('user');\r\n                    setUser(null);\r\n                    setToken(null);\r\n                }\r\n            }\r\n            setLoading(false);\r\n        };\r\n\r\n        checkAuth();\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            console.log('Attempting login with:', { email, password });\r\n            \r\n            const response = await axios.post('http://localhost:5000/auth/login', {\r\n                email,\r\n                password\r\n            });\r\n\r\n            console.log('Login response:', response.data);\r\n\r\n            const { token: newToken, user: userData } = response.data;\r\n            \r\n            localStorage.setItem('token', newToken);\r\n            localStorage.setItem('user', JSON.stringify(userData));\r\n            \r\n            setToken(newToken);\r\n            setUser(userData);\r\n            \r\n            return { success: true, user: userData };\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/auth/register', userData);\r\n            \r\n            const { token: newToken, user: newUser } = response.data;\r\n            \r\n            localStorage.setItem('token', newToken);\r\n            localStorage.setItem('user', JSON.stringify(newUser));\r\n            \r\n            setToken(newToken);\r\n            setUser(newUser);\r\n            \r\n            return { success: true, user: newUser };\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        setToken(null);\r\n        setUser(null);\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    };\r\n\r\n    const updateUser = (updatedUser) => {\r\n        setUser(updatedUser);\r\n        localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    };\r\n\r\n    const isAuthenticated = () => {\r\n        return !!token && !!user;\r\n    };\r\n\r\n    const hasRole = (role) => {\r\n        return user && user.role === role;\r\n    };\r\n\r\n    const isBranchManager = () => {\r\n        return hasRole('Branch Manager');\r\n    };\r\n\r\n    const isFactoryManager = () => {\r\n        return hasRole('Factory Manager');\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        token,\r\n        loading,\r\n        login,\r\n        register,\r\n        logout,\r\n        updateUser,\r\n        isAuthenticated,\r\n        hasRole,\r\n        isBranchManager,\r\n        isFactoryManager\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}