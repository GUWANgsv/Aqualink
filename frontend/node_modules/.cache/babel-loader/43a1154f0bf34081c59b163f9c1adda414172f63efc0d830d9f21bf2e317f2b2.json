{"ast":null,"code":"var _jsxFileName = \"E:\\\\Y2S2\\\\Project\\\\frontend\\\\src\\\\Components\\\\Driver\\\\InteractiveMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix for default markers in react-leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Custom icons for different markers\nconst createCustomIcon = (color, iconType) => {\n  return L.divIcon({\n    className: 'custom-div-icon',\n    html: `\n      <div style=\"\n        background-color: ${color};\n        width: 30px;\n        height: 30px;\n        border-radius: 50% 50% 50% 0;\n        border: 3px solid white;\n        box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 14px;\n        color: white;\n        transform: rotate(-45deg);\n      \">\n        <span style=\"transform: rotate(45deg);\">${iconType}</span>\n      </div>\n    `,\n    iconSize: [30, 30],\n    iconAnchor: [15, 30]\n  });\n};\nconst branchIcon = createCustomIcon('#3B82F6', '🏢');\nconst emergencyIcon = createCustomIcon('#EF4444', '🚨');\nconst driverIcon = createCustomIcon('#10B981', '🚚');\n\n// Component to handle map updates\nconst MapUpdater = ({\n  center,\n  zoom\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (center && zoom) {\n      map.setView(center, zoom);\n    }\n  }, [center, zoom, map]);\n  return null;\n};\n\n// Function to get exact coordinates for specific known addresses\n_s(MapUpdater, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = MapUpdater;\nconst getExactCoordinatesForAddress = address => {\n  const addressLower = address.toLowerCase();\n\n  // Check for specific known addresses with exact coordinates\n  if (addressLower.includes('maradana') && addressLower.includes('baseline road') && addressLower.includes('colombo 10')) {\n    console.log('🎯 Found exact address: Maradana, Baseline Road, Colombo 10');\n    return [6.9400, 79.8500]; // Exact coordinates for Maradana, Baseline Road, Colombo 10\n  }\n\n  // Add more specific addresses here as needed\n  if (addressLower.includes('maharagama') && addressLower.includes('high level road')) {\n    console.log('🎯 Found exact address: Maharagama High Level Road');\n    return [6.8481, 79.9285];\n  }\n  if (addressLower.includes('borella') && addressLower.includes('baseline road')) {\n    console.log('🎯 Found exact address: Borella Baseline Road');\n    return [6.9047, 79.8844];\n  }\n  return null; // No exact match found\n};\n\n// Component to generate emergency location (exact or random)\nconst generateEmergencyLocation = (branchCoords, maxDistanceKm = 30, address = null) => {\n  // First, try to get exact coordinates for the address\n  if (address) {\n    const exactCoords = getExactCoordinatesForAddress(address);\n    if (exactCoords) {\n      console.log('📍 Using exact coordinates for address:', address);\n      return exactCoords;\n    }\n  }\n\n  // If no exact match, generate random location within distance\n  console.log('🎲 Generating random location within', maxDistanceKm, 'km');\n  const R = 6371; // Earth's radius in km\n\n  // Convert to radians\n  const lat1 = branchCoords[0] * Math.PI / 180;\n  const lng1 = branchCoords[1] * Math.PI / 180;\n\n  // Generate random distance (0 to maxDistanceKm)\n  const distance = Math.random() * maxDistanceKm;\n\n  // Generate random bearing (0 to 2π)\n  const bearing = Math.random() * 2 * Math.PI;\n\n  // Calculate new coordinates\n  const lat2 = Math.asin(Math.sin(lat1) * Math.cos(distance / R) + Math.cos(lat1) * Math.sin(distance / R) * Math.cos(bearing));\n  const lng2 = lng1 + Math.atan2(Math.sin(bearing) * Math.sin(distance / R) * Math.cos(lat1), Math.cos(distance / R) - Math.sin(lat1) * Math.sin(lat2));\n  return [lat2 * 180 / Math.PI, lng2 * 180 / Math.PI];\n};\n\n// Calculate distance between two points using Haversine formula\nconst calculateDistance = (lat1, lng1, lat2, lng2) => {\n  const R = 6371; // Earth's radius in km\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLng = (lng2 - lng1) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n};\nconst InteractiveMap = ({\n  branchLocation,\n  emergencyRequest,\n  showRoute = false,\n  onRouteCalculated,\n  onEmergencyLocationGenerated\n}) => {\n  _s2();\n  const [emergencyCoords, setEmergencyCoords] = useState(null);\n  const [route, setRoute] = useState([]);\n  const [distance, setDistance] = useState(null);\n  const [estimatedTime, setEstimatedTime] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [mapCenter, setMapCenter] = useState([6.9271, 79.8612]); // Colombo center\n  const [mapZoom, setMapZoom] = useState(12);\n  const mapRef = useRef(null);\n\n  // Colombo 7 branch coordinates (more accurate)\n  const colombo7BranchCoords = [6.8700, 79.8700]; // Dehiwala area coordinates\n\n  // Default branch location if not provided\n  const defaultBranchLocation = {\n    name: 'Colombo 7 Branch',\n    address: '123 Galle Road, Colombo 07, Sri Lanka',\n    coordinates: colombo7BranchCoords\n  };\n  const branch = branchLocation || defaultBranchLocation;\n  const branchCoords = branch.coordinates || colombo7BranchCoords;\n\n  // Generate emergency location when emergency request is provided\n  useEffect(() => {\n    if (emergencyRequest && !emergencyCoords) {\n      let coords;\n      if (emergencyRequest.coordinates) {\n        // Use provided coordinates\n        coords = [emergencyRequest.coordinates.lat, emergencyRequest.coordinates.lng];\n      } else {\n        // Generate random location within 30km\n        coords = generateEmergencyLocation(branchCoords, 30);\n        console.log('🎯 Generated emergency location within 30km:', coords);\n\n        // Notify parent component about generated location\n        if (onEmergencyLocationGenerated) {\n          onEmergencyLocationGenerated({\n            lat: coords[0],\n            lng: coords[1],\n            address: emergencyRequest.brigadeLocation || 'Generated Emergency Location'\n          });\n        }\n      }\n      setEmergencyCoords(coords);\n\n      // Calculate distance\n      const calculatedDistance = calculateDistance(branchCoords[0], branchCoords[1], coords[0], coords[1]);\n      setDistance(calculatedDistance);\n\n      // Calculate estimated time (assuming 40 km/h average speed)\n      const timeInHours = calculatedDistance / 40;\n      const hours = Math.floor(timeInHours);\n      const minutes = Math.round((timeInHours - hours) * 60);\n      const timeString = hours > 0 ? `${hours}h ${minutes}m` : `${minutes}m`;\n      setEstimatedTime(timeString);\n\n      // Update map center to show both locations\n      const centerLat = (branchCoords[0] + coords[0]) / 2;\n      const centerLng = (branchCoords[1] + coords[1]) / 2;\n      setMapCenter([centerLat, centerLng]);\n      setMapZoom(11);\n    }\n  }, [emergencyRequest, branchCoords, emergencyCoords, onEmergencyLocationGenerated]);\n\n  // Calculate route when showRoute is true\n  useEffect(() => {\n    if (showRoute && emergencyCoords && branchCoords) {\n      calculateRoute();\n    }\n  }, [showRoute, emergencyCoords, branchCoords]);\n  const calculateRoute = async () => {\n    if (!emergencyCoords || !branchCoords) return;\n    setLoading(true);\n    try {\n      // Create a simple route with waypoints\n      const routePoints = [branchCoords, [(branchCoords[0] + emergencyCoords[0]) / 2 + (Math.random() - 0.5) * 0.01, (branchCoords[1] + emergencyCoords[1]) / 2 + (Math.random() - 0.5) * 0.01], emergencyCoords];\n      setRoute(routePoints);\n\n      // Calculate road distance (approximate)\n      let roadDistance = 0;\n      for (let i = 0; i < routePoints.length - 1; i++) {\n        roadDistance += calculateDistance(routePoints[i][0], routePoints[i][1], routePoints[i + 1][0], routePoints[i + 1][1]);\n      }\n\n      // Add some road factor (roads are not straight lines)\n      roadDistance *= 1.3; // 30% longer than straight line\n      setDistance(roadDistance);\n\n      // Calculate estimated time\n      const timeInHours = roadDistance / 40; // 40 km/h average\n      const hours = Math.floor(timeInHours);\n      const minutes = Math.round((timeInHours - hours) * 60);\n      const timeString = hours > 0 ? `${hours}h ${minutes}m` : `${minutes}m`;\n      setEstimatedTime(timeString);\n\n      // Notify parent component\n      if (onRouteCalculated) {\n        onRouteCalculated({\n          distance: roadDistance,\n          estimatedTime: timeString,\n          route: routePoints\n        });\n      }\n    } catch (error) {\n      console.error('Error calculating route:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-96 border border-gray-300 rounded-lg overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      ref: mapRef,\n      center: mapCenter,\n      zoom: mapZoom,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(MapUpdater, {\n        center: mapCenter,\n        zoom: mapZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: branchCoords,\n        icon: branchIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-blue-600\",\n              children: [\"\\uD83C\\uDFE2 \", branch.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: branch.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: [\"\\uD83D\\uDCCD \", branchCoords[0].toFixed(6), \", \", branchCoords[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), emergencyCoords && /*#__PURE__*/_jsxDEV(Marker, {\n        position: emergencyCoords,\n        icon: emergencyIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-red-600\",\n              children: \"\\uD83D\\uDEA8 Emergency Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: (emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeName) || 'Emergency Request'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: (emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeLocation) || 'Generated Location'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 mt-1\",\n              children: [\"\\uD83D\\uDCCD \", emergencyCoords[0].toFixed(6), \", \", emergencyCoords[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), distance && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-blue-600 mt-1\",\n              children: [\"\\uD83D\\uDCCF Distance: \", distance.toFixed(2), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), estimatedTime && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-green-600\",\n              children: [\"\\u23F1\\uFE0F Est. Time: \", estimatedTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), showRoute && route.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: route,\n        color: \"#3B82F6\",\n        weight: 4,\n        opacity: 0.8,\n        dashArray: \"10, 10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-4 left-4 bg-white p-2 rounded shadow-lg z-[1000]\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Calculating route...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-4 left-4 bg-white p-3 rounded shadow-lg z-[1000] max-w-xs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-semibold text-gray-800 mb-2\",\n        children: \"\\uD83D\\uDCCD Route Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 14\n          }, this), \" \", branch.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"To:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 14\n          }, this), \" \", (emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeName) || 'Emergency Location']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), distance && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Distance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 16\n          }, this), \" \", distance.toFixed(2), \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), estimatedTime && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Est. Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 16\n          }, this), \" \", estimatedTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), (emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.priority) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `text-xs px-2 py-1 rounded ${emergencyRequest.priority === 'Critical' ? 'bg-red-100 text-red-800' : emergencyRequest.priority === 'High' ? 'bg-orange-100 text-orange-800' : 'bg-yellow-100 text-yellow-800'}`,\n          children: [\"Priority: \", emergencyRequest.priority]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s2(InteractiveMap, \"QdUspPNKo09uEPAzdTXYOoJFAeU=\");\n_c2 = InteractiveMap;\nexport default InteractiveMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapUpdater\");\n$RefreshReg$(_c2, \"InteractiveMap\");","map":{"version":3,"names":["React","useEffect","useState","useRef","MapContainer","TileLayer","Marker","Popup","Polyline","useMap","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","createCustomIcon","color","iconType","divIcon","className","html","iconSize","iconAnchor","branchIcon","emergencyIcon","driverIcon","MapUpdater","center","zoom","_s","map","setView","_c","getExactCoordinatesForAddress","address","addressLower","toLowerCase","includes","console","log","generateEmergencyLocation","branchCoords","maxDistanceKm","exactCoords","R","lat1","Math","PI","lng1","distance","random","bearing","lat2","asin","sin","cos","lng2","atan2","calculateDistance","dLat","dLng","a","c","sqrt","InteractiveMap","branchLocation","emergencyRequest","showRoute","onRouteCalculated","onEmergencyLocationGenerated","_s2","emergencyCoords","setEmergencyCoords","route","setRoute","setDistance","estimatedTime","setEstimatedTime","loading","setLoading","mapCenter","setMapCenter","mapZoom","setMapZoom","mapRef","colombo7BranchCoords","defaultBranchLocation","name","coordinates","branch","coords","lat","lng","brigadeLocation","calculatedDistance","timeInHours","hours","floor","minutes","round","timeString","centerLat","centerLng","calculateRoute","routePoints","roadDistance","i","length","error","children","ref","style","height","width","scrollWheelZoom","fileName","_jsxFileName","lineNumber","columnNumber","attribution","url","position","icon","toFixed","brigadeName","positions","weight","opacity","dashArray","priority","_c2","$RefreshReg$"],"sources":["E:/Y2S2/Project/frontend/src/Components/Driver/InteractiveMap.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Fix for default markers in react-leaflet\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\n// Custom icons for different markers\r\nconst createCustomIcon = (color, iconType) => {\r\n  return L.divIcon({\r\n    className: 'custom-div-icon',\r\n    html: `\r\n      <div style=\"\r\n        background-color: ${color};\r\n        width: 30px;\r\n        height: 30px;\r\n        border-radius: 50% 50% 50% 0;\r\n        border: 3px solid white;\r\n        box-shadow: 0 2px 6px rgba(0,0,0,0.3);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 14px;\r\n        color: white;\r\n        transform: rotate(-45deg);\r\n      \">\r\n        <span style=\"transform: rotate(45deg);\">${iconType}</span>\r\n      </div>\r\n    `,\r\n    iconSize: [30, 30],\r\n    iconAnchor: [15, 30],\r\n  });\r\n};\r\n\r\nconst branchIcon = createCustomIcon('#3B82F6', '🏢');\r\nconst emergencyIcon = createCustomIcon('#EF4444', '🚨');\r\nconst driverIcon = createCustomIcon('#10B981', '🚚');\r\n\r\n// Component to handle map updates\r\nconst MapUpdater = ({ center, zoom }) => {\r\n  const map = useMap();\r\n  \r\n  useEffect(() => {\r\n    if (center && zoom) {\r\n      map.setView(center, zoom);\r\n    }\r\n  }, [center, zoom, map]);\r\n  \r\n  return null;\r\n};\r\n\r\n// Function to get exact coordinates for specific known addresses\r\nconst getExactCoordinatesForAddress = (address) => {\r\n  const addressLower = address.toLowerCase();\r\n  \r\n  // Check for specific known addresses with exact coordinates\r\n  if (addressLower.includes('maradana') && addressLower.includes('baseline road') && addressLower.includes('colombo 10')) {\r\n    console.log('🎯 Found exact address: Maradana, Baseline Road, Colombo 10');\r\n    return [6.9400, 79.8500]; // Exact coordinates for Maradana, Baseline Road, Colombo 10\r\n  }\r\n  \r\n  // Add more specific addresses here as needed\r\n  if (addressLower.includes('maharagama') && addressLower.includes('high level road')) {\r\n    console.log('🎯 Found exact address: Maharagama High Level Road');\r\n    return [6.8481, 79.9285];\r\n  }\r\n  \r\n  if (addressLower.includes('borella') && addressLower.includes('baseline road')) {\r\n    console.log('🎯 Found exact address: Borella Baseline Road');\r\n    return [6.9047, 79.8844];\r\n  }\r\n  \r\n  return null; // No exact match found\r\n};\r\n\r\n// Component to generate emergency location (exact or random)\r\nconst generateEmergencyLocation = (branchCoords, maxDistanceKm = 30, address = null) => {\r\n  // First, try to get exact coordinates for the address\r\n  if (address) {\r\n    const exactCoords = getExactCoordinatesForAddress(address);\r\n    if (exactCoords) {\r\n      console.log('📍 Using exact coordinates for address:', address);\r\n      return exactCoords;\r\n    }\r\n  }\r\n  \r\n  // If no exact match, generate random location within distance\r\n  console.log('🎲 Generating random location within', maxDistanceKm, 'km');\r\n  const R = 6371; // Earth's radius in km\r\n  \r\n  // Convert to radians\r\n  const lat1 = branchCoords[0] * Math.PI / 180;\r\n  const lng1 = branchCoords[1] * Math.PI / 180;\r\n  \r\n  // Generate random distance (0 to maxDistanceKm)\r\n  const distance = Math.random() * maxDistanceKm;\r\n  \r\n  // Generate random bearing (0 to 2π)\r\n  const bearing = Math.random() * 2 * Math.PI;\r\n  \r\n  // Calculate new coordinates\r\n  const lat2 = Math.asin(\r\n    Math.sin(lat1) * Math.cos(distance / R) +\r\n    Math.cos(lat1) * Math.sin(distance / R) * Math.cos(bearing)\r\n  );\r\n  \r\n  const lng2 = lng1 + Math.atan2(\r\n    Math.sin(bearing) * Math.sin(distance / R) * Math.cos(lat1),\r\n    Math.cos(distance / R) - Math.sin(lat1) * Math.sin(lat2)\r\n  );\r\n  \r\n  return [\r\n    lat2 * 180 / Math.PI,\r\n    lng2 * 180 / Math.PI\r\n  ];\r\n};\r\n\r\n// Calculate distance between two points using Haversine formula\r\nconst calculateDistance = (lat1, lng1, lat2, lng2) => {\r\n  const R = 6371; // Earth's radius in km\r\n  const dLat = (lat2 - lat1) * Math.PI / 180;\r\n  const dLng = (lng2 - lng1) * Math.PI / 180;\r\n  const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\r\n    Math.sin(dLng/2) * Math.sin(dLng/2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n  return R * c;\r\n};\r\n\r\nconst InteractiveMap = ({ \r\n  branchLocation, \r\n  emergencyRequest, \r\n  showRoute = false,\r\n  onRouteCalculated,\r\n  onEmergencyLocationGenerated \r\n}) => {\r\n  const [emergencyCoords, setEmergencyCoords] = useState(null);\r\n  const [route, setRoute] = useState([]);\r\n  const [distance, setDistance] = useState(null);\r\n  const [estimatedTime, setEstimatedTime] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [mapCenter, setMapCenter] = useState([6.9271, 79.8612]); // Colombo center\r\n  const [mapZoom, setMapZoom] = useState(12);\r\n  \r\n  const mapRef = useRef(null);\r\n\r\n  // Colombo 7 branch coordinates (more accurate)\r\n  const colombo7BranchCoords = [6.8700, 79.8700]; // Dehiwala area coordinates\r\n  \r\n  // Default branch location if not provided\r\n  const defaultBranchLocation = {\r\n    name: 'Colombo 7 Branch',\r\n    address: '123 Galle Road, Colombo 07, Sri Lanka',\r\n    coordinates: colombo7BranchCoords\r\n  };\r\n\r\n  const branch = branchLocation || defaultBranchLocation;\r\n  const branchCoords = branch.coordinates || colombo7BranchCoords;\r\n\r\n  // Generate emergency location when emergency request is provided\r\n  useEffect(() => {\r\n    if (emergencyRequest && !emergencyCoords) {\r\n      let coords;\r\n      \r\n      if (emergencyRequest.coordinates) {\r\n        // Use provided coordinates\r\n        coords = [emergencyRequest.coordinates.lat, emergencyRequest.coordinates.lng];\r\n      } else {\r\n        // Generate random location within 30km\r\n        coords = generateEmergencyLocation(branchCoords, 30);\r\n        console.log('🎯 Generated emergency location within 30km:', coords);\r\n        \r\n        // Notify parent component about generated location\r\n        if (onEmergencyLocationGenerated) {\r\n          onEmergencyLocationGenerated({\r\n            lat: coords[0],\r\n            lng: coords[1],\r\n            address: emergencyRequest.brigadeLocation || 'Generated Emergency Location'\r\n          });\r\n        }\r\n      }\r\n      \r\n      setEmergencyCoords(coords);\r\n      \r\n      // Calculate distance\r\n      const calculatedDistance = calculateDistance(\r\n        branchCoords[0], branchCoords[1],\r\n        coords[0], coords[1]\r\n      );\r\n      setDistance(calculatedDistance);\r\n      \r\n      // Calculate estimated time (assuming 40 km/h average speed)\r\n      const timeInHours = calculatedDistance / 40;\r\n      const hours = Math.floor(timeInHours);\r\n      const minutes = Math.round((timeInHours - hours) * 60);\r\n      const timeString = hours > 0 ? `${hours}h ${minutes}m` : `${minutes}m`;\r\n      setEstimatedTime(timeString);\r\n      \r\n      // Update map center to show both locations\r\n      const centerLat = (branchCoords[0] + coords[0]) / 2;\r\n      const centerLng = (branchCoords[1] + coords[1]) / 2;\r\n      setMapCenter([centerLat, centerLng]);\r\n      setMapZoom(11);\r\n    }\r\n  }, [emergencyRequest, branchCoords, emergencyCoords, onEmergencyLocationGenerated]);\r\n\r\n  // Calculate route when showRoute is true\r\n  useEffect(() => {\r\n    if (showRoute && emergencyCoords && branchCoords) {\r\n      calculateRoute();\r\n    }\r\n  }, [showRoute, emergencyCoords, branchCoords]);\r\n\r\n  const calculateRoute = async () => {\r\n    if (!emergencyCoords || !branchCoords) return;\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      // Create a simple route with waypoints\r\n      const routePoints = [\r\n        branchCoords,\r\n        [\r\n          (branchCoords[0] + emergencyCoords[0]) / 2 + (Math.random() - 0.5) * 0.01,\r\n          (branchCoords[1] + emergencyCoords[1]) / 2 + (Math.random() - 0.5) * 0.01\r\n        ],\r\n        emergencyCoords\r\n      ];\r\n      \r\n      setRoute(routePoints);\r\n      \r\n      // Calculate road distance (approximate)\r\n      let roadDistance = 0;\r\n      for (let i = 0; i < routePoints.length - 1; i++) {\r\n        roadDistance += calculateDistance(\r\n          routePoints[i][0], routePoints[i][1],\r\n          routePoints[i + 1][0], routePoints[i + 1][1]\r\n        );\r\n      }\r\n      \r\n      // Add some road factor (roads are not straight lines)\r\n      roadDistance *= 1.3; // 30% longer than straight line\r\n      setDistance(roadDistance);\r\n      \r\n      // Calculate estimated time\r\n      const timeInHours = roadDistance / 40; // 40 km/h average\r\n      const hours = Math.floor(timeInHours);\r\n      const minutes = Math.round((timeInHours - hours) * 60);\r\n      const timeString = hours > 0 ? `${hours}h ${minutes}m` : `${minutes}m`;\r\n      setEstimatedTime(timeString);\r\n      \r\n      // Notify parent component\r\n      if (onRouteCalculated) {\r\n        onRouteCalculated({\r\n          distance: roadDistance,\r\n          estimatedTime: timeString,\r\n          route: routePoints\r\n        });\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error calculating route:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-96 border border-gray-300 rounded-lg overflow-hidden\">\r\n      <MapContainer\r\n        ref={mapRef}\r\n        center={mapCenter}\r\n        zoom={mapZoom}\r\n        style={{ height: '100%', width: '100%' }}\r\n        scrollWheelZoom={true}\r\n      >\r\n        <MapUpdater center={mapCenter} zoom={mapZoom} />\r\n        \r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        \r\n        {/* Branch Marker */}\r\n        <Marker position={branchCoords} icon={branchIcon}>\r\n          <Popup>\r\n            <div className=\"p-2\">\r\n              <h3 className=\"font-bold text-blue-600\">🏢 {branch.name}</h3>\r\n              <p className=\"text-sm text-gray-600\">{branch.address}</p>\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                📍 {branchCoords[0].toFixed(6)}, {branchCoords[1].toFixed(6)}\r\n              </p>\r\n            </div>\r\n          </Popup>\r\n        </Marker>\r\n        \r\n        {/* Emergency Location Marker */}\r\n        {emergencyCoords && (\r\n          <Marker position={emergencyCoords} icon={emergencyIcon}>\r\n            <Popup>\r\n              <div className=\"p-2\">\r\n                <h3 className=\"font-bold text-red-600\">🚨 Emergency Location</h3>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {emergencyRequest?.brigadeName || 'Emergency Request'}\r\n                </p>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {emergencyRequest?.brigadeLocation || 'Generated Location'}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  📍 {emergencyCoords[0].toFixed(6)}, {emergencyCoords[1].toFixed(6)}\r\n                </p>\r\n                {distance && (\r\n                  <p className=\"text-xs text-blue-600 mt-1\">\r\n                    📏 Distance: {distance.toFixed(2)} km\r\n                  </p>\r\n                )}\r\n                {estimatedTime && (\r\n                  <p className=\"text-xs text-green-600\">\r\n                    ⏱️ Est. Time: {estimatedTime}\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        )}\r\n        \r\n        {/* Route Line */}\r\n        {showRoute && route.length > 0 && (\r\n          <Polyline\r\n            positions={route}\r\n            color=\"#3B82F6\"\r\n            weight={4}\r\n            opacity={0.8}\r\n            dashArray=\"10, 10\"\r\n          />\r\n        )}\r\n        \r\n        {/* Loading indicator */}\r\n        {loading && (\r\n          <div className=\"absolute top-4 left-4 bg-white p-2 rounded shadow-lg z-[1000]\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\r\n              <span className=\"text-sm text-gray-600\">Calculating route...</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </MapContainer>\r\n      \r\n      {/* Map Info Panel */}\r\n      <div className=\"absolute bottom-4 left-4 bg-white p-3 rounded shadow-lg z-[1000] max-w-xs\">\r\n        <h4 className=\"font-semibold text-gray-800 mb-2\">📍 Route Information</h4>\r\n        <div className=\"text-sm space-y-1\">\r\n          <p><strong>From:</strong> {branch.name}</p>\r\n          <p><strong>To:</strong> {emergencyRequest?.brigadeName || 'Emergency Location'}</p>\r\n          {distance && (\r\n            <p><strong>Distance:</strong> {distance.toFixed(2)} km</p>\r\n          )}\r\n          {estimatedTime && (\r\n            <p><strong>Est. Time:</strong> {estimatedTime}</p>\r\n          )}\r\n          {emergencyRequest?.priority && (\r\n            <p className={`text-xs px-2 py-1 rounded ${\r\n              emergencyRequest.priority === 'Critical' ? 'bg-red-100 text-red-800' :\r\n              emergencyRequest.priority === 'High' ? 'bg-orange-100 text-orange-800' :\r\n              'bg-yellow-100 text-yellow-800'\r\n            }`}>\r\n              Priority: {emergencyRequest.priority}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}