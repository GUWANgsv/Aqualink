{"ast":null,"code":"var _jsxFileName = \"E:\\\\Y2S2\\\\Project\\\\frontend\\\\src\\\\Components\\\\Driver\\\\EmergencyRouteMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport InteractiveMap from './InteractiveMap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmergencyRouteMap = ({\n  emergencyRequest,\n  branchLocation,\n  onClose\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [estimatedTime, setEstimatedTime] = useState(null);\n  const [showRoute, setShowRoute] = useState(false);\n  const [generatedEmergencyLocation, setGeneratedEmergencyLocation] = useState(null);\n\n  // Default coordinates for Colombo 7, Sri Lanka\n  const defaultCenter = [6.8700, 79.8700]; // Colombo 7 (Dehiwala) coordinates\n\n  // Parse branch coordinates\n  const branchCoords = branchLocation ? [branchLocation.lat || 6.8700, branchLocation.lng || 79.8700] : defaultCenter;\n\n  // Geocode address to get actual coordinates (prioritizing local accurate coordinates)\n  const geocodeAddress = React.useCallback(async address => {\n    if (!address) return defaultCenter;\n\n    // Check if we already have coordinates for this address\n    const addressKey = address.toLowerCase().trim();\n    if (geocodeCache[addressKey]) {\n      console.log('🎯 Using cached geocoding result for:', address);\n      return geocodeCache[addressKey];\n    }\n    setIsGeocoding(true);\n    try {\n      console.log('🌍 Processing address:', address);\n\n      // FIRST: Try to get accurate local coordinates\n      const localCoords = getFallbackCoordinates(address);\n      if (localCoords) {\n        console.log('✅ Using accurate local coordinates for:', address);\n        console.log('📍 Local coordinates:', localCoords);\n        geocodeCache[addressKey] = localCoords;\n        return localCoords;\n      }\n\n      // SECOND: If no local match, try online geocoding as backup\n      console.log('🌍 No local match found, trying online geocoding...');\n      const strategies = [`${address}, Sri Lanka`, `${address}, Colombo, Sri Lanka`, address, address.split(',')[0] + ', Colombo, Sri Lanka'];\n      for (const searchQuery of strategies) {\n        try {\n          console.log(`🔍 Trying online geocoding: \"${searchQuery}\"`);\n          const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchQuery)}&limit=5&countrycodes=lk&addressdetails=1`);\n          const data = await response.json();\n          if (data && data.length > 0) {\n            let bestResult = data[0];\n            for (const result of data) {\n              if (result.address && parseFloat(result.lat) > 5.5 && parseFloat(result.lat) < 10.0 && parseFloat(result.lon) > 79.0 && parseFloat(result.lon) < 82.0) {\n                bestResult = result;\n                console.log('🎯 Found online Sri Lankan location:', result.display_name);\n                break;\n              }\n            }\n            const coords = [parseFloat(bestResult.lat), parseFloat(bestResult.lon)];\n            if (coords[0] > 5.5 && coords[0] < 10.0 && coords[1] > 79.0 && coords[1] < 82.0) {\n              console.log('✅ Online geocoded coordinates:', coords);\n              geocodeCache[addressKey] = coords;\n              return coords;\n            }\n          }\n        } catch (strategyError) {\n          console.log(`⚠️ Online strategy failed: ${strategyError.message}`);\n          continue;\n        }\n      }\n\n      // FINAL FALLBACK: Use default coordinates\n      console.log('⚠️ All geocoding failed, using default coordinates');\n      geocodeCache[addressKey] = defaultCenter;\n      return defaultCenter;\n    } catch (error) {\n      console.error('❌ Geocoding failed:', error);\n      geocodeCache[addressKey] = defaultCenter;\n      return defaultCenter;\n    } finally {\n      setIsGeocoding(false);\n    }\n  }, []);\n\n  // Fallback coordinates for common Colombo areas with more specific locations\n  const getFallbackCoordinates = address => {\n    const addressLower = address.toLowerCase();\n    console.log('🔍 Checking address for local coordinates:', address);\n    console.log('🔍 Address in lowercase:', addressLower);\n\n    // Check for specific known address patterns first\n    if (addressLower.includes('maharagama') && addressLower.includes('high level road')) {\n      console.log('🎯 Detected Maharagama High Level Road address');\n      console.log('📍 Returning Maharagama coordinates: [6.8481, 79.9285]');\n      return [6.8481, 79.9285]; // Accurate Maharagama High Level Road coordinates\n    }\n    if (addressLower.includes('borella') && addressLower.includes('baseline road')) {\n      console.log('🎯 Detected Borella Baseline Road address');\n      console.log('📍 Returning Borella coordinates: [6.9047, 79.8844]');\n      return [6.9047, 79.8844]; // Accurate Borella Baseline Road coordinates\n    }\n\n    // More specific Colombo area coordinates\n    const areaCoordinates = {\n      // Borella area - more specific\n      'borella': [6.9047, 79.8844],\n      'baseline road': [6.9047, 79.8844],\n      'baseline': [6.9047, 79.8844],\n      'borella baseline': [6.9047, 79.8844],\n      // Colombo postal codes with specific areas\n      'colombo 01': [6.9300, 79.8400],\n      // Fort\n      'colombo 02': [6.9200, 79.8500],\n      // Slave Island\n      'colombo 03': [6.9100, 79.8500],\n      // Kollupitiya\n      'colombo 04': [6.9000, 79.8600],\n      // Bambalapitiya\n      'colombo 05': [6.8900, 79.8600],\n      // Wellawatta\n      'colombo 06': [6.8800, 79.8700],\n      // Mount Lavinia\n      'colombo 07': [6.8700, 79.8700],\n      // Dehiwala\n      'colombo 08': [6.9047, 79.8844],\n      // Borella\n      'colombo 09': [6.8900, 79.8800],\n      // Dematagoda\n      'colombo 10': [6.9400, 79.8500],\n      // Maradana\n      'colombo 11': [6.9400, 79.8500],\n      // Pettah\n      'colombo 12': [6.9500, 79.8400],\n      // Kotahena\n      'colombo 13': [6.9600, 79.8300],\n      // Modara\n      'colombo 14': [6.9700, 79.8200],\n      // Grandpass\n      'colombo 15': [6.9800, 79.8100],\n      // Mattakkuliya\n\n      // Specific areas with more accurate coordinates\n      'kollupitiya': [6.9100, 79.8500],\n      'bambalapitiya': [6.8900, 79.8600],\n      'pettah': [6.9400, 79.8500],\n      'fort': [6.9300, 79.8400],\n      'slave island': [6.9200, 79.8500],\n      'union place': [6.9200, 79.8500],\n      'liberty plaza': [6.9100, 79.8500],\n      'galle road': [6.9100, 79.8500],\n      'maradana': [6.9400, 79.8500],\n      'dematagoda': [6.8900, 79.8800],\n      'wellawatta': [6.8900, 79.8600],\n      'mount lavinia': [6.8800, 79.8700],\n      'dehiwala': [6.8700, 79.8700],\n      // Southern Colombo areas with accurate coordinates\n      'maharagama': [6.8481, 79.9285],\n      // More accurate Maharagama coordinates\n      'high level road': [6.8481, 79.9285],\n      // High Level Road in Maharagama\n      'maharagama high level': [6.8481, 79.9285],\n      'nugegoda': [6.8631, 79.8996],\n      'kottawa': [6.8400, 79.9500],\n      'homagama': [6.8400, 80.0000],\n      'piliyandala': [6.8500, 79.9000],\n      'kaduwela': [6.9300, 79.9800],\n      'avissawella': [6.9500, 80.2000],\n      'rathmalana': [6.8200, 79.8800],\n      'moratuwa': [6.8000, 79.9000],\n      'panadura': [6.7200, 79.9000],\n      'kalutara': [6.5800, 79.9600]\n    };\n\n    // Find matching area - check for multiple keywords with priority\n    const priorityAreas = ['maharagama', 'high level road', 'nugegoda', 'kottawa', 'homagama'];\n\n    // First, check priority areas (more specific locations)\n    for (const priorityArea of priorityAreas) {\n      if (addressLower.includes(priorityArea) && areaCoordinates[priorityArea]) {\n        console.log(`🎯 Found priority area: \"${priorityArea}\" for address: \"${address}\"`);\n        console.log(`📍 Using coordinates: ${areaCoordinates[priorityArea][0]}, ${areaCoordinates[priorityArea][1]}`);\n        console.log(`📍 Returning priority coordinates: [${areaCoordinates[priorityArea][0]}, ${areaCoordinates[priorityArea][1]}]`);\n        return areaCoordinates[priorityArea];\n      }\n    }\n\n    // Then check all other areas\n    for (const [area, coords] of Object.entries(areaCoordinates)) {\n      if (addressLower.includes(area)) {\n        console.log(`🎯 Found matching area: \"${area}\" for address: \"${address}\"`);\n        console.log(`📍 Using coordinates: ${coords[0]}, ${coords[1]}`);\n        return coords;\n      }\n    }\n\n    // If no specific match, try to extract Colombo postal code\n    const colomboMatch = addressLower.match(/colombo\\s*(\\d+)/);\n    if (colomboMatch) {\n      const postalCode = `colombo ${colomboMatch[1]}`;\n      if (areaCoordinates[postalCode]) {\n        console.log(`🎯 Found Colombo postal code: ${postalCode}`);\n        return areaCoordinates[postalCode];\n      }\n    }\n\n    // Default to Colombo center if no area match\n    console.log('🎯 No specific area found, using default Colombo center coordinates');\n    return [6.9271, 79.8612];\n  };\n\n  // Calculate distance between two points using Haversine formula\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\n    const R = 6371; // Earth's radius in km\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLng = (lng2 - lng1) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n\n  // Calculate estimated travel time (assuming average speed of 40 km/h in city traffic)\n  const calculateEstimatedTime = distanceKm => {\n    const averageSpeed = 40; // km/h\n    const timeInHours = distanceKm / averageSpeed;\n    const hours = Math.floor(timeInHours);\n    const minutes = Math.round((timeInHours - hours) * 60);\n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    } else {\n      return `${minutes}m`;\n    }\n  };\n\n  // Calculate road distance along the route\n  const calculateRoadDistance = route => {\n    let totalDistance = 0;\n    for (let i = 0; i < route.length - 1; i++) {\n      const segmentDistance = calculateDistance(route[i][0], route[i][1], route[i + 1][0], route[i + 1][1]);\n      totalDistance += segmentDistance;\n    }\n    return totalDistance;\n  };\n\n  // Calculate route - simplified to prevent unresponsiveness\n  const calculateRoute = React.useCallback(async () => {\n    // Prevent multiple simultaneous calculations\n    if (loading) {\n      console.log('⚠️ Route calculation already in progress, skipping...');\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('🚀 Starting route calculation...');\n      console.log('📍 Branch coords:', branchCoords);\n      console.log('📍 Emergency coords:', emergencyCoords);\n\n      // Calculate distance and time\n      const routeDistance = calculateDistance(branchCoords[0], branchCoords[1], emergencyCoords[0], emergencyCoords[1]);\n      const calculatedTime = calculateEstimatedTime(routeDistance);\n      setDistance(routeDistance);\n      setEstimatedTime(calculatedTime);\n      console.log(`📍 Route calculated successfully:`);\n      console.log(`📏 Distance: ${routeDistance.toFixed(2)} km`);\n      console.log(`⏱️ Estimated time: ${calculatedTime}`);\n    } catch (err) {\n      console.error('Error calculating route:', err);\n      setError('Failed to calculate route.');\n      const fallbackDistance = calculateDistance(branchCoords[0], branchCoords[1], emergencyCoords[0], emergencyCoords[1]);\n      setDistance(fallbackDistance);\n      setEstimatedTime(calculateEstimatedTime(fallbackDistance));\n    } finally {\n      setLoading(false);\n    }\n  }, [branchCoords, emergencyCoords, loading]);\n\n  // Initialize coordinates when component mounts or emergency request changes\n  useEffect(() => {\n    const initializeCoordinates = async () => {\n      if (emergencyRequest !== null && emergencyRequest !== void 0 && emergencyRequest.coordinates) {\n        // If coordinates are provided, use them\n        const coords = [emergencyRequest.coordinates.lat, emergencyRequest.coordinates.lng];\n        console.log('📍 Using provided coordinates:', coords);\n        setEmergencyCoords(coords);\n      } else if (emergencyRequest !== null && emergencyRequest !== void 0 && emergencyRequest.brigadeLocation) {\n        // If only address is provided, geocode it\n        console.log('🌍 Processing address for geocoding:', emergencyRequest.brigadeLocation);\n        console.log('🔍 Address type:', typeof emergencyRequest.brigadeLocation);\n        console.log('📝 Full emergency request:', emergencyRequest);\n        const coords = await geocodeAddress(emergencyRequest.brigadeLocation);\n        console.log('📍 Final geocoded coordinates:', coords);\n        setEmergencyCoords(coords);\n      } else {\n        console.log('📍 No address provided, using default coordinates');\n        setEmergencyCoords(defaultCenter);\n      }\n    };\n    initializeCoordinates();\n  }, [emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.coordinates, emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeLocation]);\n\n  // Automatically calculate route when coordinates are updated\n  useEffect(() => {\n    if (emergencyCoords && branchCoords && emergencyRequest && !loading) {\n      console.log('🔄 Auto-calculating route after coordinate update');\n      calculateRoute();\n    }\n  }, [emergencyCoords, branchCoords, calculateRoute]);\n\n  // Manual route calculation trigger\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative top-20 mx-auto p-5 border w-11/12 max-w-4xl shadow-lg rounded-md bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900\",\n            children: \"Emergency Route Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"text-gray-400 hover:text-gray-600\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-6 h-6\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M6 18L18 6M6 6l12 12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-blue-900 mb-2\",\n            children: \"Emergency Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Location:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 20\n                }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeLocation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Brigade:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 20\n                }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Water Level:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 20\n                }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.waterLevel]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Priority:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 20\n                }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.priority]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Branch:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 20\n                }, this), \" \", (branchLocation === null || branchLocation === void 0 ? void 0 : branchLocation.name) || 'Colombo Central Branch']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Branch Address:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 20\n                }, this), \" \", (branchLocation === null || branchLocation === void 0 ? void 0 : branchLocation.address) || '123 Galle Road, Colombo 07']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), distance && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Distance:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 33\n                }, this), \" \", distance.toFixed(2), \" km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 30\n              }, this), estimatedTime && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Est. Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 38\n                }, this), \" \", estimatedTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-gray-600\",\n            children: \"Calculating route...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-yellow-800\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 p-4 bg-green-50 border border-green-200 rounded-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium text-green-700 mb-3\",\n            children: \"\\uD83D\\uDEE3\\uFE0F Emergency Water Delivery Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 p-3 bg-white border border-green-300 rounded-md\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium text-green-800 mb-1\",\n              children: \"\\uD83D\\uDCCD DESTINATION ADDRESS:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-base font-bold text-gray-900\",\n              children: (emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeLocation) || 'Address not provided'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), isGeocoding && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 flex items-center text-blue-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm\",\n                children: \"Automatically finding exact location...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this), !isGeocoding && emergencyCoords && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-xs text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\uD83D\\uDCCD Coordinates: \", emergencyCoords[0].toFixed(6), \", \", emergencyCoords[1].toFixed(6)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\uD83C\\uDFAF Location verified and ready for navigation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm space-y-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83C\\uDFE2 Brigade:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 18\n              }, this), \" \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83D\\uDE9A Starting Point:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 18\n              }, this), \" Colombo Central Branch\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83C\\uDF0D Map Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 18\n              }, this), \" \", emergencyCoords[0].toFixed(6), \", \", emergencyCoords[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), isGeocoding && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 p-2 bg-blue-50 border border-blue-200 rounded-md\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-blue-700\",\n                children: \"\\uD83D\\uDD0D Auto-geocoding in progress...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-blue-600\",\n                children: [\"Finding exact location for: \", emergencyRequest === null || emergencyRequest === void 0 ? void 0 : emergencyRequest.brigadeLocation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), distance && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 pt-2 border-t border-green-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD83D\\uDCCF Road Distance:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 22\n                }, this), \" \", distance.toFixed(2), \" km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u23F1\\uFE0F Estimated Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 22\n                }, this), \" \", estimatedTime || 'Auto-calculating...']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: [distance && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDCCF Road distance: \", distance.toFixed(2), \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 28\n            }, this), estimatedTime && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u23F1\\uFE0F Estimated time: \", estimatedTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: calculateRoute,\n              disabled: loading,\n              className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n              children: loading ? 'Calculating...' : '🔄 Recalculate Route'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onClose,\n              className: \"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n};\n_s(EmergencyRouteMap, \"OzxXjVXdhpaoSIx2UwcrvGQSJY0=\");\n_c = EmergencyRouteMap;\nexport default EmergencyRouteMap;\nvar _c;\n$RefreshReg$(_c, \"EmergencyRouteMap\");","map":{"version":3,"names":["React","useEffect","useState","InteractiveMap","jsxDEV","_jsxDEV","EmergencyRouteMap","emergencyRequest","branchLocation","onClose","_s","loading","setLoading","error","setError","distance","setDistance","estimatedTime","setEstimatedTime","showRoute","setShowRoute","generatedEmergencyLocation","setGeneratedEmergencyLocation","defaultCenter","branchCoords","lat","lng","geocodeAddress","useCallback","address","addressKey","toLowerCase","trim","geocodeCache","console","log","setIsGeocoding","localCoords","getFallbackCoordinates","strategies","split","searchQuery","response","fetch","encodeURIComponent","data","json","length","bestResult","result","parseFloat","lon","display_name","coords","strategyError","message","addressLower","includes","areaCoordinates","priorityAreas","priorityArea","area","Object","entries","colomboMatch","match","postalCode","calculateDistance","lat1","lng1","lat2","lng2","R","dLat","Math","PI","dLng","a","sin","cos","c","atan2","sqrt","calculateEstimatedTime","distanceKm","averageSpeed","timeInHours","hours","floor","minutes","round","calculateRoadDistance","route","totalDistance","i","segmentDistance","calculateRoute","emergencyCoords","routeDistance","calculatedTime","toFixed","err","fallbackDistance","initializeCoordinates","coordinates","setEmergencyCoords","brigadeLocation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","brigadeName","waterLevel","priority","name","isGeocoding","disabled","_c","$RefreshReg$"],"sources":["E:/Y2S2/Project/frontend/src/Components/Driver/EmergencyRouteMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport InteractiveMap from './InteractiveMap';\r\n\r\nconst EmergencyRouteMap = ({ emergencyRequest, branchLocation, onClose }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [distance, setDistance] = useState(null);\r\n  const [estimatedTime, setEstimatedTime] = useState(null);\r\n  const [showRoute, setShowRoute] = useState(false);\r\n  const [generatedEmergencyLocation, setGeneratedEmergencyLocation] = useState(null);\r\n\r\n  // Default coordinates for Colombo 7, Sri Lanka\r\n  const defaultCenter = [6.8700, 79.8700]; // Colombo 7 (Dehiwala) coordinates\r\n  \r\n  // Parse branch coordinates\r\n  const branchCoords = branchLocation ? \r\n    [branchLocation.lat || 6.8700, branchLocation.lng || 79.8700] : \r\n    defaultCenter;\r\n\r\n  // Geocode address to get actual coordinates (prioritizing local accurate coordinates)\r\n  const geocodeAddress = React.useCallback(async (address) => {\r\n    if (!address) return defaultCenter;\r\n    \r\n    // Check if we already have coordinates for this address\r\n    const addressKey = address.toLowerCase().trim();\r\n    if (geocodeCache[addressKey]) {\r\n      console.log('🎯 Using cached geocoding result for:', address);\r\n      return geocodeCache[addressKey];\r\n    }\r\n    \r\n    setIsGeocoding(true);\r\n    try {\r\n      console.log('🌍 Processing address:', address);\r\n      \r\n      // FIRST: Try to get accurate local coordinates\r\n      const localCoords = getFallbackCoordinates(address);\r\n      if (localCoords) {\r\n        console.log('✅ Using accurate local coordinates for:', address);\r\n        console.log('📍 Local coordinates:', localCoords);\r\n        geocodeCache[addressKey] = localCoords;\r\n        return localCoords;\r\n      }\r\n      \r\n      // SECOND: If no local match, try online geocoding as backup\r\n      console.log('🌍 No local match found, trying online geocoding...');\r\n      \r\n      const strategies = [\r\n        `${address}, Sri Lanka`,\r\n        `${address}, Colombo, Sri Lanka`,\r\n        address,\r\n        address.split(',')[0] + ', Colombo, Sri Lanka'\r\n      ];\r\n      \r\n      for (const searchQuery of strategies) {\r\n        try {\r\n          console.log(`🔍 Trying online geocoding: \"${searchQuery}\"`);\r\n          \r\n          const response = await fetch(\r\n            `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchQuery)}&limit=5&countrycodes=lk&addressdetails=1`\r\n          );\r\n          \r\n          const data = await response.json();\r\n          \r\n          if (data && data.length > 0) {\r\n            let bestResult = data[0];\r\n            \r\n            for (const result of data) {\r\n              if (result.address && \r\n                  parseFloat(result.lat) > 5.5 && parseFloat(result.lat) < 10.0 &&\r\n                  parseFloat(result.lon) > 79.0 && parseFloat(result.lon) < 82.0) {\r\n                bestResult = result;\r\n                console.log('🎯 Found online Sri Lankan location:', result.display_name);\r\n                break;\r\n              }\r\n            }\r\n            \r\n            const coords = [parseFloat(bestResult.lat), parseFloat(bestResult.lon)];\r\n            \r\n            if (coords[0] > 5.5 && coords[0] < 10.0 && coords[1] > 79.0 && coords[1] < 82.0) {\r\n              console.log('✅ Online geocoded coordinates:', coords);\r\n              geocodeCache[addressKey] = coords;\r\n              return coords;\r\n            }\r\n          }\r\n        } catch (strategyError) {\r\n          console.log(`⚠️ Online strategy failed: ${strategyError.message}`);\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      // FINAL FALLBACK: Use default coordinates\r\n      console.log('⚠️ All geocoding failed, using default coordinates');\r\n      geocodeCache[addressKey] = defaultCenter;\r\n      return defaultCenter;\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Geocoding failed:', error);\r\n      geocodeCache[addressKey] = defaultCenter;\r\n      return defaultCenter;\r\n    } finally {\r\n      setIsGeocoding(false);\r\n    }\r\n  }, []);\r\n\r\n  // Fallback coordinates for common Colombo areas with more specific locations\r\n  const getFallbackCoordinates = (address) => {\r\n    const addressLower = address.toLowerCase();\r\n    console.log('🔍 Checking address for local coordinates:', address);\r\n    console.log('🔍 Address in lowercase:', addressLower);\r\n    \r\n    // Check for specific known address patterns first\r\n    if (addressLower.includes('maharagama') && addressLower.includes('high level road')) {\r\n      console.log('🎯 Detected Maharagama High Level Road address');\r\n      console.log('📍 Returning Maharagama coordinates: [6.8481, 79.9285]');\r\n      return [6.8481, 79.9285]; // Accurate Maharagama High Level Road coordinates\r\n    }\r\n    \r\n    if (addressLower.includes('borella') && addressLower.includes('baseline road')) {\r\n      console.log('🎯 Detected Borella Baseline Road address');\r\n      console.log('📍 Returning Borella coordinates: [6.9047, 79.8844]');\r\n      return [6.9047, 79.8844]; // Accurate Borella Baseline Road coordinates\r\n    }\r\n    \r\n    // More specific Colombo area coordinates\r\n    const areaCoordinates = {\r\n      // Borella area - more specific\r\n      'borella': [6.9047, 79.8844],\r\n      'baseline road': [6.9047, 79.8844],\r\n      'baseline': [6.9047, 79.8844],\r\n      'borella baseline': [6.9047, 79.8844],\r\n      \r\n      // Colombo postal codes with specific areas\r\n      'colombo 01': [6.9300, 79.8400], // Fort\r\n      'colombo 02': [6.9200, 79.8500], // Slave Island\r\n      'colombo 03': [6.9100, 79.8500], // Kollupitiya\r\n      'colombo 04': [6.9000, 79.8600], // Bambalapitiya\r\n      'colombo 05': [6.8900, 79.8600], // Wellawatta\r\n      'colombo 06': [6.8800, 79.8700], // Mount Lavinia\r\n      'colombo 07': [6.8700, 79.8700], // Dehiwala\r\n      'colombo 08': [6.9047, 79.8844], // Borella\r\n      'colombo 09': [6.8900, 79.8800], // Dematagoda\r\n      'colombo 10': [6.9400, 79.8500], // Maradana\r\n      'colombo 11': [6.9400, 79.8500], // Pettah\r\n      'colombo 12': [6.9500, 79.8400], // Kotahena\r\n      'colombo 13': [6.9600, 79.8300], // Modara\r\n      'colombo 14': [6.9700, 79.8200], // Grandpass\r\n      'colombo 15': [6.9800, 79.8100], // Mattakkuliya\r\n      \r\n      // Specific areas with more accurate coordinates\r\n      'kollupitiya': [6.9100, 79.8500],\r\n      'bambalapitiya': [6.8900, 79.8600],\r\n      'pettah': [6.9400, 79.8500],\r\n      'fort': [6.9300, 79.8400],\r\n      'slave island': [6.9200, 79.8500],\r\n      'union place': [6.9200, 79.8500],\r\n      'liberty plaza': [6.9100, 79.8500],\r\n      'galle road': [6.9100, 79.8500],\r\n      'maradana': [6.9400, 79.8500],\r\n      'dematagoda': [6.8900, 79.8800],\r\n      'wellawatta': [6.8900, 79.8600],\r\n      'mount lavinia': [6.8800, 79.8700],\r\n      'dehiwala': [6.8700, 79.8700],\r\n      \r\n      // Southern Colombo areas with accurate coordinates\r\n      'maharagama': [6.8481, 79.9285], // More accurate Maharagama coordinates\r\n      'high level road': [6.8481, 79.9285], // High Level Road in Maharagama\r\n      'maharagama high level': [6.8481, 79.9285],\r\n      'nugegoda': [6.8631, 79.8996],\r\n      'kottawa': [6.8400, 79.9500],\r\n      'homagama': [6.8400, 80.0000],\r\n      'piliyandala': [6.8500, 79.9000],\r\n      'kaduwela': [6.9300, 79.9800],\r\n      'avissawella': [6.9500, 80.2000],\r\n      'rathmalana': [6.8200, 79.8800],\r\n      'moratuwa': [6.8000, 79.9000],\r\n      'panadura': [6.7200, 79.9000],\r\n      'kalutara': [6.5800, 79.9600]\r\n    };\r\n    \r\n    // Find matching area - check for multiple keywords with priority\r\n    const priorityAreas = ['maharagama', 'high level road', 'nugegoda', 'kottawa', 'homagama'];\r\n    \r\n    // First, check priority areas (more specific locations)\r\n    for (const priorityArea of priorityAreas) {\r\n      if (addressLower.includes(priorityArea) && areaCoordinates[priorityArea]) {\r\n        console.log(`🎯 Found priority area: \"${priorityArea}\" for address: \"${address}\"`);\r\n        console.log(`📍 Using coordinates: ${areaCoordinates[priorityArea][0]}, ${areaCoordinates[priorityArea][1]}`);\r\n        console.log(`📍 Returning priority coordinates: [${areaCoordinates[priorityArea][0]}, ${areaCoordinates[priorityArea][1]}]`);\r\n        return areaCoordinates[priorityArea];\r\n      }\r\n    }\r\n    \r\n    // Then check all other areas\r\n    for (const [area, coords] of Object.entries(areaCoordinates)) {\r\n      if (addressLower.includes(area)) {\r\n        console.log(`🎯 Found matching area: \"${area}\" for address: \"${address}\"`);\r\n        console.log(`📍 Using coordinates: ${coords[0]}, ${coords[1]}`);\r\n        return coords;\r\n      }\r\n    }\r\n    \r\n    // If no specific match, try to extract Colombo postal code\r\n    const colomboMatch = addressLower.match(/colombo\\s*(\\d+)/);\r\n    if (colomboMatch) {\r\n      const postalCode = `colombo ${colomboMatch[1]}`;\r\n      if (areaCoordinates[postalCode]) {\r\n        console.log(`🎯 Found Colombo postal code: ${postalCode}`);\r\n        return areaCoordinates[postalCode];\r\n      }\r\n    }\r\n    \r\n    // Default to Colombo center if no area match\r\n    console.log('🎯 No specific area found, using default Colombo center coordinates');\r\n    return [6.9271, 79.8612];\r\n  };\r\n\r\n  // Calculate distance between two points using Haversine formula\r\n  const calculateDistance = (lat1, lng1, lat2, lng2) => {\r\n    const R = 6371; // Earth's radius in km\r\n    const dLat = (lat2 - lat1) * Math.PI / 180;\r\n    const dLng = (lng2 - lng1) * Math.PI / 180;\r\n    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\r\n      Math.sin(dLng/2) * Math.sin(dLng/2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    return R * c;\r\n  };\r\n\r\n  // Calculate estimated travel time (assuming average speed of 40 km/h in city traffic)\r\n  const calculateEstimatedTime = (distanceKm) => {\r\n    const averageSpeed = 40; // km/h\r\n    const timeInHours = distanceKm / averageSpeed;\r\n    const hours = Math.floor(timeInHours);\r\n    const minutes = Math.round((timeInHours - hours) * 60);\r\n    \r\n    if (hours > 0) {\r\n      return `${hours}h ${minutes}m`;\r\n    } else {\r\n      return `${minutes}m`;\r\n    }\r\n  };\r\n\r\n  // Calculate road distance along the route\r\n  const calculateRoadDistance = (route) => {\r\n    let totalDistance = 0;\r\n    for (let i = 0; i < route.length - 1; i++) {\r\n      const segmentDistance = calculateDistance(\r\n        route[i][0], route[i][1],\r\n        route[i + 1][0], route[i + 1][1]\r\n      );\r\n      totalDistance += segmentDistance;\r\n    }\r\n    return totalDistance;\r\n  };\r\n\r\n  // Calculate route - simplified to prevent unresponsiveness\r\n  const calculateRoute = React.useCallback(async () => {\r\n    // Prevent multiple simultaneous calculations\r\n    if (loading) {\r\n      console.log('⚠️ Route calculation already in progress, skipping...');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      console.log('🚀 Starting route calculation...');\r\n      console.log('📍 Branch coords:', branchCoords);\r\n      console.log('📍 Emergency coords:', emergencyCoords);\r\n      \r\n      // Calculate distance and time\r\n      const routeDistance = calculateDistance(\r\n        branchCoords[0], branchCoords[1],\r\n        emergencyCoords[0], emergencyCoords[1]\r\n      );\r\n      const calculatedTime = calculateEstimatedTime(routeDistance);\r\n      \r\n      setDistance(routeDistance);\r\n      setEstimatedTime(calculatedTime);\r\n      \r\n      console.log(`📍 Route calculated successfully:`);\r\n      console.log(`📏 Distance: ${routeDistance.toFixed(2)} km`);\r\n      console.log(`⏱️ Estimated time: ${calculatedTime}`);\r\n      \r\n    } catch (err) {\r\n      console.error('Error calculating route:', err);\r\n      setError('Failed to calculate route.');\r\n      const fallbackDistance = calculateDistance(\r\n        branchCoords[0], branchCoords[1],\r\n        emergencyCoords[0], emergencyCoords[1]\r\n      );\r\n      setDistance(fallbackDistance);\r\n      setEstimatedTime(calculateEstimatedTime(fallbackDistance));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [branchCoords, emergencyCoords, loading]);\r\n\r\n  // Initialize coordinates when component mounts or emergency request changes\r\n  useEffect(() => {\r\n    const initializeCoordinates = async () => {\r\n      if (emergencyRequest?.coordinates) {\r\n        // If coordinates are provided, use them\r\n        const coords = [emergencyRequest.coordinates.lat, emergencyRequest.coordinates.lng];\r\n        console.log('📍 Using provided coordinates:', coords);\r\n        setEmergencyCoords(coords);\r\n      } else if (emergencyRequest?.brigadeLocation) {\r\n        // If only address is provided, geocode it\r\n        console.log('🌍 Processing address for geocoding:', emergencyRequest.brigadeLocation);\r\n        console.log('🔍 Address type:', typeof emergencyRequest.brigadeLocation);\r\n        console.log('📝 Full emergency request:', emergencyRequest);\r\n        \r\n        const coords = await geocodeAddress(emergencyRequest.brigadeLocation);\r\n        console.log('📍 Final geocoded coordinates:', coords);\r\n        setEmergencyCoords(coords);\r\n      } else {\r\n        console.log('📍 No address provided, using default coordinates');\r\n        setEmergencyCoords(defaultCenter);\r\n      }\r\n    };\r\n\r\n    initializeCoordinates();\r\n  }, [emergencyRequest?.coordinates, emergencyRequest?.brigadeLocation]);\r\n\r\n  // Automatically calculate route when coordinates are updated\r\n  useEffect(() => {\r\n    if (emergencyCoords && branchCoords && emergencyRequest && !loading) {\r\n      console.log('🔄 Auto-calculating route after coordinate update');\r\n      calculateRoute();\r\n    }\r\n  }, [emergencyCoords, branchCoords, calculateRoute]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Manual route calculation trigger\r\n\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\r\n      <div className=\"relative top-20 mx-auto p-5 border w-11/12 max-w-4xl shadow-lg rounded-md bg-white\">\r\n        <div className=\"mt-3\">\r\n          <div className=\"flex justify-between items-center mb-4\">\r\n            <h3 className=\"text-lg font-medium text-gray-900\">\r\n              Emergency Route Information\r\n            </h3>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-gray-600\"\r\n            >\r\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-md\">\r\n            <h4 className=\"font-medium text-blue-900 mb-2\">Emergency Details:</h4>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <p><strong>Location:</strong> {emergencyRequest?.brigadeLocation}</p>\r\n                <p><strong>Brigade:</strong> {emergencyRequest?.brigadeName}</p>\r\n                <p><strong>Water Level:</strong> {emergencyRequest?.waterLevel}</p>\r\n                <p><strong>Priority:</strong> {emergencyRequest?.priority}</p>\r\n              </div>\r\n              <div>\r\n                <p><strong>Branch:</strong> {branchLocation?.name || 'Colombo Central Branch'}</p>\r\n                <p><strong>Branch Address:</strong> {branchLocation?.address || '123 Galle Road, Colombo 07'}</p>\r\n                {distance && <p><strong>Distance:</strong> {distance.toFixed(2)} km</p>}\r\n                {estimatedTime && <p><strong>Est. Time:</strong> {estimatedTime}</p>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {loading && (\r\n            <div className=\"text-center py-4\">\r\n              <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n              <p className=\"mt-2 text-gray-600\">Calculating route...</p>\r\n            </div>\r\n          )}\r\n\r\n          {error && (\r\n            <div className=\"mb-4 p-4 bg-yellow-50 border border-yellow-200 rounded-md\">\r\n              <p className=\"text-yellow-800\">{error}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Route Information */}\r\n          <div className=\"mb-4 p-4 bg-green-50 border border-green-200 rounded-md\">\r\n            <h4 className=\"font-medium text-green-700 mb-3\">🛣️ Emergency Water Delivery Route</h4>\r\n            \r\n            {/* Destination Address - Most Prominent */}\r\n            <div className=\"mb-3 p-3 bg-white border border-green-300 rounded-md\">\r\n              <p className=\"text-sm font-medium text-green-800 mb-1\">📍 DESTINATION ADDRESS:</p>\r\n              <p className=\"text-base font-bold text-gray-900\">{emergencyRequest?.brigadeLocation || 'Address not provided'}</p>\r\n              {isGeocoding && (\r\n                <div className=\"mt-2 flex items-center text-blue-600\">\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600 mr-2\"></div>\r\n                  <span className=\"text-sm\">Automatically finding exact location...</span>\r\n                </div>\r\n              )}\r\n              {!isGeocoding && emergencyCoords && (\r\n                <div className=\"mt-2 text-xs text-gray-600\">\r\n                  <p>📍 Coordinates: {emergencyCoords[0].toFixed(6)}, {emergencyCoords[1].toFixed(6)}</p>\r\n                  <p>🎯 Location verified and ready for navigation</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"text-sm space-y-1\">\r\n              <p><strong>🏢 Brigade:</strong> {emergencyRequest?.brigadeName}</p>\r\n              <p><strong>🚚 Starting Point:</strong> Colombo Central Branch</p>\r\n              <p><strong>🌍 Map Location:</strong> {emergencyCoords[0].toFixed(6)}, {emergencyCoords[1].toFixed(6)}</p>\r\n              {isGeocoding && (\r\n                <div className=\"mt-2 p-2 bg-blue-50 border border-blue-200 rounded-md\">\r\n                  <p className=\"text-sm text-blue-700\">🔍 Auto-geocoding in progress...</p>\r\n                  <p className=\"text-xs text-blue-600\">Finding exact location for: {emergencyRequest?.brigadeLocation}</p>\r\n                </div>\r\n              )}\r\n              {distance && (\r\n                <div className=\"mt-2 pt-2 border-t border-green-200\">\r\n                  <p><strong>📏 Road Distance:</strong> {distance.toFixed(2)} km</p>\r\n                  <p><strong>⏱️ Estimated Time:</strong> {estimatedTime || 'Auto-calculating...'}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-4 flex justify-between items-center\">\r\n            <div className=\"text-sm text-gray-600\">\r\n              {distance && <p>📏 Road distance: {distance.toFixed(2)} km</p>}\r\n              {estimatedTime && <p>⏱️ Estimated time: {estimatedTime}</p>}\r\n            </div>\r\n            <div className=\"flex space-x-3\">\r\n              <button\r\n                onClick={calculateRoute}\r\n                disabled={loading}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {loading ? 'Calculating...' : '🔄 Recalculate Route'}\r\n              </button>\r\n              <button\r\n                onClick={onClose}\r\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmergencyRouteMap;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}